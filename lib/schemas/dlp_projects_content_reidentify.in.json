{
    "type": "object",
    "properties": {
        "parent": {
            "required": true,
            "type": "string"
        },
        "access_token": {
            "type": "string"
        },
        "alt": {
            "type": "string",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "default": "json"
        },
        "callback": {
            "type": "string"
        },
        "fields": {
            "type": "string"
        },
        "key": {
            "type": "string"
        },
        "oauth_token": {
            "type": "string"
        },
        "prettyPrint": {
            "type": "boolean",
            "default": true
        },
        "quotaUser": {
            "type": "string"
        },
        "uploadType": {
            "type": "string"
        },
        "upload_protocol": {
            "type": "string"
        },
        "requestBody": {
            "description": "Request to re-identify an item.",
            "properties": {
                "inspectConfig": {
                    "description": "Configuration for the inspector.",
                    "properties": {
                        "contentOptions": {
                            "description": "List of options defining data content to scan.\nIf empty, text, images, and other content will be included.",
                            "items": {
                                "enum": [
                                    "CONTENT_UNSPECIFIED",
                                    "CONTENT_TEXT",
                                    "CONTENT_IMAGE"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "customInfoTypes": {
                            "description": "CustomInfoTypes provided by the user. See\nhttps://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more.",
                            "items": {
                                "description": "Custom information type provided by the user. Used to find domain-specific\nsensitive information configurable to the data in question.",
                                "properties": {
                                    "detectionRules": {
                                        "description": "Set of detection rules to apply to all findings of this CustomInfoType.\nRules are applied in order that they are specified. Not supported for the\n`surrogate_type` CustomInfoType.",
                                        "items": {
                                            "description": "Rule for modifying a CustomInfoType to alter behavior under certain\ncircumstances, depending on the specific details of the rule. Not supported\nfor the `surrogate_type` custom info type.",
                                            "properties": {
                                                "hotwordRule": {
                                                    "description": "Hotword-based detection rule.",
                                                    "properties": {
                                                        "hotwordRegex": {
                                                            "description": "Regular expression pattern defining what qualifies as a hotword.",
                                                            "properties": {
                                                                "groupIndexes": {
                                                                    "description": "The index of the submatch to extract as findings. When not\nspecified, the entire match is returned. No more than 3 may be included.",
                                                                    "items": {
                                                                        "format": "int32",
                                                                        "type": "integer"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "pattern": {
                                                                    "description": "Pattern defining the regular expression. Its syntax\n(https://github.com/google/re2/wiki/Syntax) can be found under the\ngoogle/re2 repository on GitHub.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "likelihoodAdjustment": {
                                                            "description": "Likelihood adjustment to apply to all matching findings.",
                                                            "properties": {
                                                                "fixedLikelihood": {
                                                                    "description": "Set the likelihood of a finding to a fixed value.",
                                                                    "enum": [
                                                                        "LIKELIHOOD_UNSPECIFIED",
                                                                        "VERY_UNLIKELY",
                                                                        "UNLIKELY",
                                                                        "POSSIBLE",
                                                                        "LIKELY",
                                                                        "VERY_LIKELY"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "relativeLikelihood": {
                                                                    "description": "Increase or decrease the likelihood by the specified number of\nlevels. For example, if a finding would be `POSSIBLE` without the\ndetection rule and `relative_likelihood` is 1, then it is upgraded to\n`LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`.\nLikelihood may never drop below `VERY_UNLIKELY` or exceed\n`VERY_LIKELY`, so applying an adjustment of 1 followed by an\nadjustment of -1 when base likelihood is `VERY_LIKELY` will result in\na final likelihood of `LIKELY`.",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "proximity": {
                                                            "description": "Proximity of the finding within which the entire hotword must reside.\nThe total length of the window cannot exceed 1000 characters. Note that\nthe finding itself will be included in the window, so that hotwords may\nbe used to match substrings of the finding itself. For example, the\ncertainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be\nadjusted upwards if the area code is known to be the local area code of\na company office using the hotword regex \"\\(xxx\\)\", where \"xxx\"\nis the area code in question.",
                                                            "properties": {
                                                                "windowAfter": {
                                                                    "description": "Number of characters after the finding to consider.",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "windowBefore": {
                                                                    "description": "Number of characters before the finding to consider.",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "dictionary": {
                                        "description": "A list of phrases to detect as a CustomInfoType.",
                                        "properties": {
                                            "cloudStoragePath": {
                                                "description": "Newline-delimited file of words in Cloud Storage. Only a single file\nis accepted.",
                                                "properties": {
                                                    "path": {
                                                        "description": "A url representing a file or path (no wildcards) in Cloud Storage.\nExample: gs://[BUCKET_NAME]/dictionary.txt",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "wordList": {
                                                "description": "List of words or phrases to search for.",
                                                "properties": {
                                                    "words": {
                                                        "description": "Words or phrases defining the dictionary. The dictionary must contain\nat least one phrase and every phrase must contain at least 2 characters\nthat are letters or digits. [required]",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "exclusionType": {
                                        "description": "If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding\nto be returned. It still can be used for rules matching.",
                                        "enum": [
                                            "EXCLUSION_TYPE_UNSPECIFIED",
                                            "EXCLUSION_TYPE_EXCLUDE"
                                        ],
                                        "type": "string"
                                    },
                                    "infoType": {
                                        "description": "CustomInfoType can either be a new infoType, or an extension of built-in\ninfoType, when the name matches one of existing infoTypes and that infoType\nis specified in `InspectContent.info_types` field. Specifying the latter\nadds findings to the one detected by the system. If built-in info type is\nnot specified in `InspectContent.info_types` list then the name is treated\nas a custom info type.",
                                        "properties": {
                                            "name": {
                                                "description": "Name of the information type. Either a name of your choosing when\ncreating a CustomInfoType, or one of the names listed\nat https://cloud.google.com/dlp/docs/infotypes-reference when specifying\na built-in type. InfoType names should conform to the pattern\n[a-zA-Z0-9_]{1,64}.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "likelihood": {
                                        "description": "Likelihood to return for this CustomInfoType. This base value can be\naltered by a detection rule if the finding meets the criteria specified by\nthe rule. Defaults to `VERY_LIKELY` if not specified.",
                                        "enum": [
                                            "LIKELIHOOD_UNSPECIFIED",
                                            "VERY_UNLIKELY",
                                            "UNLIKELY",
                                            "POSSIBLE",
                                            "LIKELY",
                                            "VERY_LIKELY"
                                        ],
                                        "type": "string"
                                    },
                                    "regex": {
                                        "description": "Regular expression based CustomInfoType.",
                                        "properties": {
                                            "groupIndexes": {
                                                "description": "The index of the submatch to extract as findings. When not\nspecified, the entire match is returned. No more than 3 may be included.",
                                                "items": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "type": "array"
                                            },
                                            "pattern": {
                                                "description": "Pattern defining the regular expression. Its syntax\n(https://github.com/google/re2/wiki/Syntax) can be found under the\ngoogle/re2 repository on GitHub.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "storedType": {
                                        "description": "Load an existing `StoredInfoType` resource for use in\n`InspectDataSource`. Not currently supported in `InspectContent`.",
                                        "properties": {
                                            "createTime": {
                                                "description": "Timestamp indicating when the version of the `StoredInfoType` used for\ninspection was created. Output-only field, populated by the system.",
                                                "format": "google-datetime",
                                                "type": "string"
                                            },
                                            "name": {
                                                "description": "Resource name of the requested `StoredInfoType`, for example\n`organizations/433245324/storedInfoTypes/432452342` or\n`projects/project-id/storedInfoTypes/432452342`.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "surrogateType": {
                                        "description": "Message for detecting output from deidentification transformations that\nsupport reversing.",
                                        "properties": {},
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "excludeInfoTypes": {
                            "description": "When true, excludes type information of the findings.",
                            "type": "boolean"
                        },
                        "includeQuote": {
                            "description": "When true, a contextual quote from the data that triggered a finding is\nincluded in the response; see Finding.quote.",
                            "type": "boolean"
                        },
                        "infoTypes": {
                            "description": "Restricts what info_types to look for. The values must correspond to\nInfoType values returned by ListInfoTypes or listed at\nhttps://cloud.google.com/dlp/docs/infotypes-reference.\n\nWhen no InfoTypes or CustomInfoTypes are specified in a request, the\nsystem may automatically choose what detectors to run. By default this may\nbe all types, but may change over time as detectors are updated.\n\nThe special InfoType name \"ALL_BASIC\" can be used to trigger all detectors,\nbut may change over time as new InfoTypes are added. If you need precise\ncontrol and predictability as to what detectors are run you should specify\nspecific InfoTypes listed in the reference.",
                            "items": {
                                "description": "Type of information detected by the API.",
                                "properties": {
                                    "name": {
                                        "description": "Name of the information type. Either a name of your choosing when\ncreating a CustomInfoType, or one of the names listed\nat https://cloud.google.com/dlp/docs/infotypes-reference when specifying\na built-in type. InfoType names should conform to the pattern\n[a-zA-Z0-9_]{1,64}.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "limits": {
                            "properties": {
                                "maxFindingsPerInfoType": {
                                    "description": "Configuration of findings limit given for specified infoTypes.",
                                    "items": {
                                        "description": "Max findings configuration per infoType, per content item or long\nrunning DlpJob.",
                                        "properties": {
                                            "infoType": {
                                                "description": "Type of information the findings limit applies to. Only one limit per\ninfo_type should be provided. If InfoTypeLimit does not have an\ninfo_type, the DLP API applies the limit against all info_types that\nare found but not specified in another InfoTypeLimit.",
                                                "properties": {
                                                    "name": {
                                                        "description": "Name of the information type. Either a name of your choosing when\ncreating a CustomInfoType, or one of the names listed\nat https://cloud.google.com/dlp/docs/infotypes-reference when specifying\na built-in type. InfoType names should conform to the pattern\n[a-zA-Z0-9_]{1,64}.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "maxFindings": {
                                                "description": "Max findings limit for the given infoType.",
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "maxFindingsPerItem": {
                                    "description": "Max number of findings that will be returned for each item scanned.\nWhen set within `InspectDataSourceRequest`,\nthe maximum returned is 2000 regardless if this is set higher.\nWhen set within `InspectContentRequest`, this field is ignored.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "maxFindingsPerRequest": {
                                    "description": "Max number of findings that will be returned per request/job.\nWhen set within `InspectContentRequest`, the maximum returned is 2000\nregardless if this is set higher.",
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "minLikelihood": {
                            "description": "Only returns findings equal or above this threshold. The default is\nPOSSIBLE.\nSee https://cloud.google.com/dlp/docs/likelihood to learn more.",
                            "enum": [
                                "LIKELIHOOD_UNSPECIFIED",
                                "VERY_UNLIKELY",
                                "UNLIKELY",
                                "POSSIBLE",
                                "LIKELY",
                                "VERY_LIKELY"
                            ],
                            "type": "string"
                        },
                        "ruleSet": {
                            "description": "Set of rules to apply to the findings for this InspectConfig.\nExclusion rules, contained in the set are executed in the end, other\nrules are executed in the order they are specified for each info type.",
                            "items": {
                                "description": "Rule set for modifying a set of infoTypes to alter behavior under certain\ncircumstances, depending on the specific details of the rules within the set.",
                                "properties": {
                                    "infoTypes": {
                                        "description": "List of infoTypes this rule set is applied to.",
                                        "items": {
                                            "description": "Type of information detected by the API.",
                                            "properties": {
                                                "name": {
                                                    "description": "Name of the information type. Either a name of your choosing when\ncreating a CustomInfoType, or one of the names listed\nat https://cloud.google.com/dlp/docs/infotypes-reference when specifying\na built-in type. InfoType names should conform to the pattern\n[a-zA-Z0-9_]{1,64}.",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "rules": {
                                        "description": "Set of rules to be applied to infoTypes. The rules are applied in order.",
                                        "items": {
                                            "description": "A single inspection rule to be applied to infoTypes, specified in\n`InspectionRuleSet`.",
                                            "properties": {
                                                "exclusionRule": {
                                                    "description": "Exclusion rule.",
                                                    "properties": {
                                                        "dictionary": {
                                                            "description": "Dictionary which defines the rule.",
                                                            "properties": {
                                                                "cloudStoragePath": {
                                                                    "description": "Newline-delimited file of words in Cloud Storage. Only a single file\nis accepted.",
                                                                    "properties": {
                                                                        "path": {
                                                                            "description": "A url representing a file or path (no wildcards) in Cloud Storage.\nExample: gs://[BUCKET_NAME]/dictionary.txt",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "wordList": {
                                                                    "description": "List of words or phrases to search for.",
                                                                    "properties": {
                                                                        "words": {
                                                                            "description": "Words or phrases defining the dictionary. The dictionary must contain\nat least one phrase and every phrase must contain at least 2 characters\nthat are letters or digits. [required]",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "excludeInfoTypes": {
                                                            "description": "Set of infoTypes for which findings would affect this rule.",
                                                            "properties": {
                                                                "infoTypes": {
                                                                    "description": "InfoType list in ExclusionRule rule drops a finding when it overlaps or\ncontained within with a finding of an infoType from this list. For\nexample, for `InspectionRuleSet.info_types` containing \"PHONE_NUMBER\"` and\n`exclusion_rule` containing `exclude_info_types.info_types` with\n\"EMAIL_ADDRESS\" the phone number findings are dropped if they overlap\nwith EMAIL_ADDRESS finding.\nThat leads to \"555-222-2222@example.org\" to generate only a single\nfinding, namely email address.",
                                                                    "items": {
                                                                        "description": "Type of information detected by the API.",
                                                                        "properties": {
                                                                            "name": {
                                                                                "description": "Name of the information type. Either a name of your choosing when\ncreating a CustomInfoType, or one of the names listed\nat https://cloud.google.com/dlp/docs/infotypes-reference when specifying\na built-in type. InfoType names should conform to the pattern\n[a-zA-Z0-9_]{1,64}.",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "matchingType": {
                                                            "description": "How the rule is applied, see MatchingType documentation for details.",
                                                            "enum": [
                                                                "MATCHING_TYPE_UNSPECIFIED",
                                                                "MATCHING_TYPE_FULL_MATCH",
                                                                "MATCHING_TYPE_PARTIAL_MATCH",
                                                                "MATCHING_TYPE_INVERSE_MATCH"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "regex": {
                                                            "description": "Regular expression which defines the rule.",
                                                            "properties": {
                                                                "groupIndexes": {
                                                                    "description": "The index of the submatch to extract as findings. When not\nspecified, the entire match is returned. No more than 3 may be included.",
                                                                    "items": {
                                                                        "format": "int32",
                                                                        "type": "integer"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "pattern": {
                                                                    "description": "Pattern defining the regular expression. Its syntax\n(https://github.com/google/re2/wiki/Syntax) can be found under the\ngoogle/re2 repository on GitHub.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "hotwordRule": {
                                                    "description": "Hotword-based detection rule.",
                                                    "properties": {
                                                        "hotwordRegex": {
                                                            "description": "Regular expression pattern defining what qualifies as a hotword.",
                                                            "properties": {
                                                                "groupIndexes": {
                                                                    "description": "The index of the submatch to extract as findings. When not\nspecified, the entire match is returned. No more than 3 may be included.",
                                                                    "items": {
                                                                        "format": "int32",
                                                                        "type": "integer"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "pattern": {
                                                                    "description": "Pattern defining the regular expression. Its syntax\n(https://github.com/google/re2/wiki/Syntax) can be found under the\ngoogle/re2 repository on GitHub.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "likelihoodAdjustment": {
                                                            "description": "Likelihood adjustment to apply to all matching findings.",
                                                            "properties": {
                                                                "fixedLikelihood": {
                                                                    "description": "Set the likelihood of a finding to a fixed value.",
                                                                    "enum": [
                                                                        "LIKELIHOOD_UNSPECIFIED",
                                                                        "VERY_UNLIKELY",
                                                                        "UNLIKELY",
                                                                        "POSSIBLE",
                                                                        "LIKELY",
                                                                        "VERY_LIKELY"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "relativeLikelihood": {
                                                                    "description": "Increase or decrease the likelihood by the specified number of\nlevels. For example, if a finding would be `POSSIBLE` without the\ndetection rule and `relative_likelihood` is 1, then it is upgraded to\n`LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`.\nLikelihood may never drop below `VERY_UNLIKELY` or exceed\n`VERY_LIKELY`, so applying an adjustment of 1 followed by an\nadjustment of -1 when base likelihood is `VERY_LIKELY` will result in\na final likelihood of `LIKELY`.",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "proximity": {
                                                            "description": "Proximity of the finding within which the entire hotword must reside.\nThe total length of the window cannot exceed 1000 characters. Note that\nthe finding itself will be included in the window, so that hotwords may\nbe used to match substrings of the finding itself. For example, the\ncertainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be\nadjusted upwards if the area code is known to be the local area code of\na company office using the hotword regex \"\\(xxx\\)\", where \"xxx\"\nis the area code in question.",
                                                            "properties": {
                                                                "windowAfter": {
                                                                    "description": "Number of characters after the finding to consider.",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "windowBefore": {
                                                                    "description": "Number of characters before the finding to consider.",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "inspectTemplateName": {
                    "description": "Optional template to use. Any configuration directly specified in\n`inspect_config` will override those set in the template. Singular fields\nthat are set in this request will replace their corresponding fields in the\ntemplate. Repeated fields are appended. Singular sub-messages and groups\nare recursively merged.",
                    "type": "string"
                },
                "item": {
                    "description": "The item to re-identify. Will be treated as text.",
                    "properties": {
                        "byteItem": {
                            "description": "Content data to inspect or redact. Replaces `type` and `data`.",
                            "properties": {
                                "data": {
                                    "description": "Content data to inspect or redact.",
                                    "format": "byte",
                                    "type": "string"
                                },
                                "type": {
                                    "description": "The type of data stored in the bytes string. Default will be TEXT_UTF8.",
                                    "enum": [
                                        "BYTES_TYPE_UNSPECIFIED",
                                        "IMAGE",
                                        "IMAGE_JPEG",
                                        "IMAGE_BMP",
                                        "IMAGE_PNG",
                                        "IMAGE_SVG",
                                        "TEXT_UTF8"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "table": {
                            "description": "Structured content for inspection. See\nhttps://cloud.google.com/dlp/docs/inspecting-text#inspecting_a_table to\nlearn more.",
                            "properties": {
                                "headers": {
                                    "items": {
                                        "description": "General identifier of a data field in a storage service.",
                                        "properties": {
                                            "name": {
                                                "description": "Name describing the field.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "rows": {
                                    "items": {
                                        "properties": {
                                            "values": {
                                                "items": {
                                                    "description": "Set of primitive values supported by the system.\nNote that for the purposes of inspection or transformation, the number\nof bytes considered to comprise a 'Value' is based on its representation\nas a UTF-8 encoded string. For example, if 'integer_value' is set to\n123456789, the number of bytes would be counted as 9, even though an\nint64 only holds up to 8 bytes of data.",
                                                    "properties": {
                                                        "booleanValue": {
                                                            "type": "boolean"
                                                        },
                                                        "dateValue": {
                                                            "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
                                                            "properties": {
                                                                "day": {
                                                                    "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "month": {
                                                                    "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "year": {
                                                                    "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "dayOfWeekValue": {
                                                            "enum": [
                                                                "DAY_OF_WEEK_UNSPECIFIED",
                                                                "MONDAY",
                                                                "TUESDAY",
                                                                "WEDNESDAY",
                                                                "THURSDAY",
                                                                "FRIDAY",
                                                                "SATURDAY",
                                                                "SUNDAY"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "floatValue": {
                                                            "format": "double",
                                                            "type": "number"
                                                        },
                                                        "integerValue": {
                                                            "format": "int64",
                                                            "type": "string"
                                                        },
                                                        "stringValue": {
                                                            "type": "string"
                                                        },
                                                        "timeValue": {
                                                            "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are google.type.Date and `google.protobuf.Timestamp`.",
                                                            "properties": {
                                                                "hours": {
                                                                    "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time.",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "minutes": {
                                                                    "description": "Minutes of hour of day. Must be from 0 to 59.",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "nanos": {
                                                                    "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "seconds": {
                                                                    "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds.",
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "timestampValue": {
                                                            "format": "google-datetime",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "value": {
                            "description": "String data to inspect or redact.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "reidentifyConfig": {
                    "description": "Configuration for the re-identification of the content item.\nThis field shares the same proto message type that is used for\nde-identification, however its usage here is for the reversal of the\nprevious de-identification. Re-identification is performed by examining\nthe transformations used to de-identify the items and executing the\nreverse. This requires that only reversible transformations\nbe provided here. The reversible transformations are:\n\n - `CryptoReplaceFfxFpeConfig`",
                    "properties": {
                        "infoTypeTransformations": {
                            "description": "Treat the dataset as free-form text and apply the same free text\ntransformation everywhere.",
                            "properties": {
                                "transformations": {
                                    "description": "Transformation for each infoType. Cannot specify more than one\nfor a given infoType. [required]",
                                    "items": {
                                        "description": "A transformation to apply to text that is identified as a specific\ninfo_type.",
                                        "properties": {
                                            "infoTypes": {
                                                "description": "InfoTypes to apply the transformation to. An empty list will cause\nthis transformation to apply to all findings that correspond to\ninfoTypes that were requested in `InspectConfig`.",
                                                "items": {
                                                    "description": "Type of information detected by the API.",
                                                    "properties": {
                                                        "name": {
                                                            "description": "Name of the information type. Either a name of your choosing when\ncreating a CustomInfoType, or one of the names listed\nat https://cloud.google.com/dlp/docs/infotypes-reference when specifying\na built-in type. InfoType names should conform to the pattern\n[a-zA-Z0-9_]{1,64}.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "primitiveTransformation": {
                                                "description": "Primitive transformation to apply to the infoType. [required]",
                                                "properties": {
                                                    "bucketingConfig": {
                                                        "description": "Generalization function that buckets values based on ranges. The ranges and\nreplacement values are dynamically provided by the user for custom behavior,\nsuch as 1-30 -> LOW 31-65 -> MEDIUM 66-100 -> HIGH\nThis can be used on\ndata of type: number, long, string, timestamp.\nIf the bound `Value` type differs from the type of data being transformed, we\nwill first attempt converting the type of the data to be transformed to match\nthe type of the bound before comparing.\nSee https://cloud.google.com/dlp/docs/concepts-bucketing to learn more.",
                                                        "properties": {
                                                            "buckets": {
                                                                "description": "Set of buckets. Ranges must be non-overlapping.",
                                                                "items": {
                                                                    "description": "Bucket is represented as a range, along with replacement values.",
                                                                    "properties": {
                                                                        "max": {
                                                                            "description": "Upper bound of the range, exclusive; type must match min.",
                                                                            "properties": {
                                                                                "booleanValue": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "dateValue": {
                                                                                    "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
                                                                                    "properties": {
                                                                                        "day": {
                                                                                            "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "month": {
                                                                                            "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "year": {
                                                                                            "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "dayOfWeekValue": {
                                                                                    "enum": [
                                                                                        "DAY_OF_WEEK_UNSPECIFIED",
                                                                                        "MONDAY",
                                                                                        "TUESDAY",
                                                                                        "WEDNESDAY",
                                                                                        "THURSDAY",
                                                                                        "FRIDAY",
                                                                                        "SATURDAY",
                                                                                        "SUNDAY"
                                                                                    ],
                                                                                    "type": "string"
                                                                                },
                                                                                "floatValue": {
                                                                                    "format": "double",
                                                                                    "type": "number"
                                                                                },
                                                                                "integerValue": {
                                                                                    "format": "int64",
                                                                                    "type": "string"
                                                                                },
                                                                                "stringValue": {
                                                                                    "type": "string"
                                                                                },
                                                                                "timeValue": {
                                                                                    "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are google.type.Date and `google.protobuf.Timestamp`.",
                                                                                    "properties": {
                                                                                        "hours": {
                                                                                            "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "minutes": {
                                                                                            "description": "Minutes of hour of day. Must be from 0 to 59.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "nanos": {
                                                                                            "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "seconds": {
                                                                                            "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "timestampValue": {
                                                                                    "format": "google-datetime",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "min": {
                                                                            "description": "Lower bound of the range, inclusive. Type should be the same as max if\nused.",
                                                                            "properties": {
                                                                                "booleanValue": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "dateValue": {
                                                                                    "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
                                                                                    "properties": {
                                                                                        "day": {
                                                                                            "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "month": {
                                                                                            "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "year": {
                                                                                            "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "dayOfWeekValue": {
                                                                                    "enum": [
                                                                                        "DAY_OF_WEEK_UNSPECIFIED",
                                                                                        "MONDAY",
                                                                                        "TUESDAY",
                                                                                        "WEDNESDAY",
                                                                                        "THURSDAY",
                                                                                        "FRIDAY",
                                                                                        "SATURDAY",
                                                                                        "SUNDAY"
                                                                                    ],
                                                                                    "type": "string"
                                                                                },
                                                                                "floatValue": {
                                                                                    "format": "double",
                                                                                    "type": "number"
                                                                                },
                                                                                "integerValue": {
                                                                                    "format": "int64",
                                                                                    "type": "string"
                                                                                },
                                                                                "stringValue": {
                                                                                    "type": "string"
                                                                                },
                                                                                "timeValue": {
                                                                                    "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are google.type.Date and `google.protobuf.Timestamp`.",
                                                                                    "properties": {
                                                                                        "hours": {
                                                                                            "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "minutes": {
                                                                                            "description": "Minutes of hour of day. Must be from 0 to 59.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "nanos": {
                                                                                            "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "seconds": {
                                                                                            "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "timestampValue": {
                                                                                    "format": "google-datetime",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "replacementValue": {
                                                                            "description": "Replacement value for this bucket. If not provided\nthe default behavior will be to hyphenate the min-max range.",
                                                                            "properties": {
                                                                                "booleanValue": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "dateValue": {
                                                                                    "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
                                                                                    "properties": {
                                                                                        "day": {
                                                                                            "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "month": {
                                                                                            "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "year": {
                                                                                            "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "dayOfWeekValue": {
                                                                                    "enum": [
                                                                                        "DAY_OF_WEEK_UNSPECIFIED",
                                                                                        "MONDAY",
                                                                                        "TUESDAY",
                                                                                        "WEDNESDAY",
                                                                                        "THURSDAY",
                                                                                        "FRIDAY",
                                                                                        "SATURDAY",
                                                                                        "SUNDAY"
                                                                                    ],
                                                                                    "type": "string"
                                                                                },
                                                                                "floatValue": {
                                                                                    "format": "double",
                                                                                    "type": "number"
                                                                                },
                                                                                "integerValue": {
                                                                                    "format": "int64",
                                                                                    "type": "string"
                                                                                },
                                                                                "stringValue": {
                                                                                    "type": "string"
                                                                                },
                                                                                "timeValue": {
                                                                                    "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are google.type.Date and `google.protobuf.Timestamp`.",
                                                                                    "properties": {
                                                                                        "hours": {
                                                                                            "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "minutes": {
                                                                                            "description": "Minutes of hour of day. Must be from 0 to 59.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "nanos": {
                                                                                            "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "seconds": {
                                                                                            "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "timestampValue": {
                                                                                    "format": "google-datetime",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "characterMaskConfig": {
                                                        "description": "Partially mask a string by replacing a given number of characters with a\nfixed character. Masking can start from the beginning or end of the string.\nThis can be used on data of any type (numbers, longs, and so on) and when\nde-identifying structured data we'll attempt to preserve the original data's\ntype. (This allows you to take a long like 123 and modify it to a string like\n**3.",
                                                        "properties": {
                                                            "charactersToIgnore": {
                                                                "description": "When masking a string, items in this list will be skipped when replacing.\nFor example, if your string is 555-555-5555 and you ask us to skip `-` and\nmask 5 chars with * we would produce ***-*55-5555.",
                                                                "items": {
                                                                    "description": "Characters to skip when doing deidentification of a value. These will be left\nalone and skipped.",
                                                                    "properties": {
                                                                        "charactersToSkip": {
                                                                            "type": "string"
                                                                        },
                                                                        "commonCharactersToIgnore": {
                                                                            "enum": [
                                                                                "COMMON_CHARS_TO_IGNORE_UNSPECIFIED",
                                                                                "NUMERIC",
                                                                                "ALPHA_UPPER_CASE",
                                                                                "ALPHA_LOWER_CASE",
                                                                                "PUNCTUATION",
                                                                                "WHITESPACE"
                                                                            ],
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "maskingCharacter": {
                                                                "description": "Character to mask the sensitive values&mdash;for example, \"*\" for an\nalphabetic string such as name, or \"0\" for a numeric string such as ZIP\ncode or credit card number. String must have length 1. If not supplied, we\nwill default to \"*\" for strings, 0 for digits.",
                                                                "type": "string"
                                                            },
                                                            "numberToMask": {
                                                                "description": "Number of characters to mask. If not set, all matching chars will be\nmasked. Skipped characters do not count towards this tally.",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "reverseOrder": {
                                                                "description": "Mask characters in reverse order. For example, if `masking_character` is\n'0', number_to_mask is 14, and `reverse_order` is false, then\n1234-5678-9012-3456 -> 00000000000000-3456\nIf `masking_character` is '*', `number_to_mask` is 3, and `reverse_order`\nis true, then 12345 -> 12***",
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "cryptoHashConfig": {
                                                        "description": "Pseudonymization method that generates surrogates via cryptographic hashing.\nUses SHA-256.\nThe key size must be either 32 or 64 bytes.\nOutputs a base64 encoded representation of the hashed output\n(for example, L7k0BHmF1ha5U3NfGykjro4xWi1MPVQPjhMAZbSV9mM=).\nCurrently, only string and integer values can be hashed.\nSee https://cloud.google.com/dlp/docs/pseudonymization to learn more.",
                                                        "properties": {
                                                            "cryptoKey": {
                                                                "description": "The key used by the hash function.",
                                                                "properties": {
                                                                    "kmsWrapped": {
                                                                        "description": "Include to use an existing data crypto key wrapped by KMS.\nThe wrapped key must be a 128/192/256 bit key.\nAuthorization requires the following IAM permissions when sending a request\nto perform a crypto transformation using a kms-wrapped crypto key:\ndlp.kms.encrypt",
                                                                        "properties": {
                                                                            "cryptoKeyName": {
                                                                                "description": "The resource name of the KMS CryptoKey to use for unwrapping. [required]",
                                                                                "type": "string"
                                                                            },
                                                                            "wrappedKey": {
                                                                                "description": "The wrapped data crypto key. [required]",
                                                                                "format": "byte",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "transient": {
                                                                        "description": "Use this to have a random data crypto key generated.\nIt will be discarded after the request finishes.",
                                                                        "properties": {
                                                                            "name": {
                                                                                "description": "Name of the key. [required]\nThis is an arbitrary string used to differentiate different keys.\nA unique key is generated per name: two separate `TransientCryptoKey`\nprotos share the same generated key if their names are the same.\nWhen the data crypto key is generated, this name is not used in any way\n(repeating the api call will result in a different key being generated).",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "unwrapped": {
                                                                        "description": "Using raw keys is prone to security risks due to accidentally\nleaking the key. Choose another type of key if possible.",
                                                                        "properties": {
                                                                            "key": {
                                                                                "description": "A 128/192/256 bit key. [required]",
                                                                                "format": "byte",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "cryptoReplaceFfxFpeConfig": {
                                                        "description": "Note: We recommend using  CryptoDeterministicConfig for all use cases which\ndo not require preserving the input alphabet space and size, plus warrant\nreferential integrity.",
                                                        "properties": {
                                                            "commonAlphabet": {
                                                                "enum": [
                                                                    "FFX_COMMON_NATIVE_ALPHABET_UNSPECIFIED",
                                                                    "NUMERIC",
                                                                    "HEXADECIMAL",
                                                                    "UPPER_CASE_ALPHA_NUMERIC",
                                                                    "ALPHA_NUMERIC"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "context": {
                                                                "description": "The 'tweak', a context may be used for higher security since the same\nidentifier in two different contexts won't be given the same surrogate. If\nthe context is not set, a default tweak will be used.\n\nIf the context is set but:\n\n1. there is no record present when transforming a given value or\n1. the field is not present when transforming a given value,\n\na default tweak will be used.\n\nNote that case (1) is expected when an `InfoTypeTransformation` is\napplied to both structured and non-structured `ContentItem`s.\nCurrently, the referenced field may be of value type integer or string.\n\nThe tweak is constructed as a sequence of bytes in big endian byte order\nsuch that:\n\n- a 64 bit integer is encoded followed by a single byte of value 1\n- a string is encoded in UTF-8 format followed by a single byte of value 2",
                                                                "properties": {
                                                                    "name": {
                                                                        "description": "Name describing the field.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "cryptoKey": {
                                                                "description": "The key used by the encryption algorithm. [required]",
                                                                "properties": {
                                                                    "kmsWrapped": {
                                                                        "description": "Include to use an existing data crypto key wrapped by KMS.\nThe wrapped key must be a 128/192/256 bit key.\nAuthorization requires the following IAM permissions when sending a request\nto perform a crypto transformation using a kms-wrapped crypto key:\ndlp.kms.encrypt",
                                                                        "properties": {
                                                                            "cryptoKeyName": {
                                                                                "description": "The resource name of the KMS CryptoKey to use for unwrapping. [required]",
                                                                                "type": "string"
                                                                            },
                                                                            "wrappedKey": {
                                                                                "description": "The wrapped data crypto key. [required]",
                                                                                "format": "byte",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "transient": {
                                                                        "description": "Use this to have a random data crypto key generated.\nIt will be discarded after the request finishes.",
                                                                        "properties": {
                                                                            "name": {
                                                                                "description": "Name of the key. [required]\nThis is an arbitrary string used to differentiate different keys.\nA unique key is generated per name: two separate `TransientCryptoKey`\nprotos share the same generated key if their names are the same.\nWhen the data crypto key is generated, this name is not used in any way\n(repeating the api call will result in a different key being generated).",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "unwrapped": {
                                                                        "description": "Using raw keys is prone to security risks due to accidentally\nleaking the key. Choose another type of key if possible.",
                                                                        "properties": {
                                                                            "key": {
                                                                                "description": "A 128/192/256 bit key. [required]",
                                                                                "format": "byte",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "customAlphabet": {
                                                                "description": "This is supported by mapping these to the alphanumeric characters\nthat the FFX mode natively supports. This happens before/after\nencryption/decryption.\nEach character listed must appear only once.\nNumber of characters must be in the range [2, 62].\nThis must be encoded as ASCII.\nThe order of characters does not matter.",
                                                                "type": "string"
                                                            },
                                                            "radix": {
                                                                "description": "The native way to select the alphabet. Must be in the range [2, 62].",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "surrogateInfoType": {
                                                                "description": "The custom infoType to annotate the surrogate with.\nThis annotation will be applied to the surrogate by prefixing it with\nthe name of the custom infoType followed by the number of\ncharacters comprising the surrogate. The following scheme defines the\nformat: info_type_name(surrogate_character_count):surrogate\n\nFor example, if the name of custom infoType is 'MY_TOKEN_INFO_TYPE' and\nthe surrogate is 'abc', the full replacement value\nwill be: 'MY_TOKEN_INFO_TYPE(3):abc'\n\nThis annotation identifies the surrogate when inspecting content using the\ncustom infoType\n[`SurrogateType`](/dlp/docs/reference/rest/v2/InspectConfig#surrogatetype).\nThis facilitates reversal of the surrogate when it occurs in free text.\n\nIn order for inspection to work properly, the name of this infoType must\nnot occur naturally anywhere in your data; otherwise, inspection may\nfind a surrogate that does not correspond to an actual identifier.\nTherefore, choose your custom infoType name carefully after considering\nwhat your data looks like. One way to select a name that has a high chance\nof yielding reliable detection is to include one or more unicode characters\nthat are highly improbable to exist in your data.\nFor example, assuming your data is entered from a regular ASCII keyboard,\nthe symbol with the hex code point 29DD might be used like so:\n⧝MY_TOKEN_TYPE",
                                                                "properties": {
                                                                    "name": {
                                                                        "description": "Name of the information type. Either a name of your choosing when\ncreating a CustomInfoType, or one of the names listed\nat https://cloud.google.com/dlp/docs/infotypes-reference when specifying\na built-in type. InfoType names should conform to the pattern\n[a-zA-Z0-9_]{1,64}.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "dateShiftConfig": {
                                                        "description": "Shifts dates by random number of days, with option to be consistent for the\nsame context. See https://cloud.google.com/dlp/docs/concepts-date-shifting\nto learn more.",
                                                        "properties": {
                                                            "context": {
                                                                "description": "Points to the field that contains the context, for example, an entity id.\nIf set, must also set method. If set, shift will be consistent for the\ngiven context.",
                                                                "properties": {
                                                                    "name": {
                                                                        "description": "Name describing the field.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "cryptoKey": {
                                                                "description": "Causes the shift to be computed based on this key and the context. This\nresults in the same shift for the same context and crypto_key.",
                                                                "properties": {
                                                                    "kmsWrapped": {
                                                                        "description": "Include to use an existing data crypto key wrapped by KMS.\nThe wrapped key must be a 128/192/256 bit key.\nAuthorization requires the following IAM permissions when sending a request\nto perform a crypto transformation using a kms-wrapped crypto key:\ndlp.kms.encrypt",
                                                                        "properties": {
                                                                            "cryptoKeyName": {
                                                                                "description": "The resource name of the KMS CryptoKey to use for unwrapping. [required]",
                                                                                "type": "string"
                                                                            },
                                                                            "wrappedKey": {
                                                                                "description": "The wrapped data crypto key. [required]",
                                                                                "format": "byte",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "transient": {
                                                                        "description": "Use this to have a random data crypto key generated.\nIt will be discarded after the request finishes.",
                                                                        "properties": {
                                                                            "name": {
                                                                                "description": "Name of the key. [required]\nThis is an arbitrary string used to differentiate different keys.\nA unique key is generated per name: two separate `TransientCryptoKey`\nprotos share the same generated key if their names are the same.\nWhen the data crypto key is generated, this name is not used in any way\n(repeating the api call will result in a different key being generated).",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "unwrapped": {
                                                                        "description": "Using raw keys is prone to security risks due to accidentally\nleaking the key. Choose another type of key if possible.",
                                                                        "properties": {
                                                                            "key": {
                                                                                "description": "A 128/192/256 bit key. [required]",
                                                                                "format": "byte",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "lowerBoundDays": {
                                                                "description": "For example, -5 means shift date to at most 5 days back in the past.\n[Required]",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "upperBoundDays": {
                                                                "description": "Range of shift in days. Actual shift will be selected at random within this\nrange (inclusive ends). Negative means shift to earlier in time. Must not\nbe more than 365250 days (1000 years) each direction.\n\nFor example, 3 means shift date to at most 3 days into the future.\n[Required]",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "fixedSizeBucketingConfig": {
                                                        "description": "Buckets values based on fixed size ranges. The\nBucketing transformation can provide all of this functionality,\nbut requires more configuration. This message is provided as a convenience to\nthe user for simple bucketing strategies.\n\nThe transformed value will be a hyphenated string of\n<lower_bound>-<upper_bound>, i.e if lower_bound = 10 and upper_bound = 20\nall values that are within this bucket will be replaced with \"10-20\".\n\nThis can be used on data of type: double, long.\n\nIf the bound Value type differs from the type of data\nbeing transformed, we will first attempt converting the type of the data to\nbe transformed to match the type of the bound before comparing.\n\nSee https://cloud.google.com/dlp/docs/concepts-bucketing to learn more.",
                                                        "properties": {
                                                            "bucketSize": {
                                                                "description": "Size of each bucket (except for minimum and maximum buckets). So if\n`lower_bound` = 10, `upper_bound` = 89, and `bucket_size` = 10, then the\nfollowing buckets would be used: -10, 10-20, 20-30, 30-40, 40-50, 50-60,\n60-70, 70-80, 80-89, 89+. Precision up to 2 decimals works. [Required].",
                                                                "format": "double",
                                                                "type": "number"
                                                            },
                                                            "lowerBound": {
                                                                "description": "Lower bound value of buckets. All values less than `lower_bound` are\ngrouped together into a single bucket; for example if `lower_bound` = 10,\nthen all values less than 10 are replaced with the value “-10”. [Required].",
                                                                "properties": {
                                                                    "booleanValue": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "dateValue": {
                                                                        "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
                                                                        "properties": {
                                                                            "day": {
                                                                                "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "month": {
                                                                                "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "year": {
                                                                                "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "dayOfWeekValue": {
                                                                        "enum": [
                                                                            "DAY_OF_WEEK_UNSPECIFIED",
                                                                            "MONDAY",
                                                                            "TUESDAY",
                                                                            "WEDNESDAY",
                                                                            "THURSDAY",
                                                                            "FRIDAY",
                                                                            "SATURDAY",
                                                                            "SUNDAY"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "floatValue": {
                                                                        "format": "double",
                                                                        "type": "number"
                                                                    },
                                                                    "integerValue": {
                                                                        "format": "int64",
                                                                        "type": "string"
                                                                    },
                                                                    "stringValue": {
                                                                        "type": "string"
                                                                    },
                                                                    "timeValue": {
                                                                        "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are google.type.Date and `google.protobuf.Timestamp`.",
                                                                        "properties": {
                                                                            "hours": {
                                                                                "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "minutes": {
                                                                                "description": "Minutes of hour of day. Must be from 0 to 59.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "nanos": {
                                                                                "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "seconds": {
                                                                                "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "timestampValue": {
                                                                        "format": "google-datetime",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "upperBound": {
                                                                "description": "Upper bound value of buckets. All values greater than upper_bound are\ngrouped together into a single bucket; for example if `upper_bound` = 89,\nthen all values greater than 89 are replaced with the value “89+”.\n[Required].",
                                                                "properties": {
                                                                    "booleanValue": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "dateValue": {
                                                                        "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
                                                                        "properties": {
                                                                            "day": {
                                                                                "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "month": {
                                                                                "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "year": {
                                                                                "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "dayOfWeekValue": {
                                                                        "enum": [
                                                                            "DAY_OF_WEEK_UNSPECIFIED",
                                                                            "MONDAY",
                                                                            "TUESDAY",
                                                                            "WEDNESDAY",
                                                                            "THURSDAY",
                                                                            "FRIDAY",
                                                                            "SATURDAY",
                                                                            "SUNDAY"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "floatValue": {
                                                                        "format": "double",
                                                                        "type": "number"
                                                                    },
                                                                    "integerValue": {
                                                                        "format": "int64",
                                                                        "type": "string"
                                                                    },
                                                                    "stringValue": {
                                                                        "type": "string"
                                                                    },
                                                                    "timeValue": {
                                                                        "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are google.type.Date and `google.protobuf.Timestamp`.",
                                                                        "properties": {
                                                                            "hours": {
                                                                                "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "minutes": {
                                                                                "description": "Minutes of hour of day. Must be from 0 to 59.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "nanos": {
                                                                                "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "seconds": {
                                                                                "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "timestampValue": {
                                                                        "format": "google-datetime",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "redactConfig": {
                                                        "description": "Redact a given value. For example, if used with an `InfoTypeTransformation`\ntransforming PHONE_NUMBER, and input 'My phone number is 206-555-0123', the\noutput would be 'My phone number is '.",
                                                        "properties": {},
                                                        "type": "object"
                                                    },
                                                    "replaceConfig": {
                                                        "description": "Replace each input value with a given `Value`.",
                                                        "properties": {
                                                            "newValue": {
                                                                "description": "Value to replace it with.",
                                                                "properties": {
                                                                    "booleanValue": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "dateValue": {
                                                                        "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
                                                                        "properties": {
                                                                            "day": {
                                                                                "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "month": {
                                                                                "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "year": {
                                                                                "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "dayOfWeekValue": {
                                                                        "enum": [
                                                                            "DAY_OF_WEEK_UNSPECIFIED",
                                                                            "MONDAY",
                                                                            "TUESDAY",
                                                                            "WEDNESDAY",
                                                                            "THURSDAY",
                                                                            "FRIDAY",
                                                                            "SATURDAY",
                                                                            "SUNDAY"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "floatValue": {
                                                                        "format": "double",
                                                                        "type": "number"
                                                                    },
                                                                    "integerValue": {
                                                                        "format": "int64",
                                                                        "type": "string"
                                                                    },
                                                                    "stringValue": {
                                                                        "type": "string"
                                                                    },
                                                                    "timeValue": {
                                                                        "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are google.type.Date and `google.protobuf.Timestamp`.",
                                                                        "properties": {
                                                                            "hours": {
                                                                                "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "minutes": {
                                                                                "description": "Minutes of hour of day. Must be from 0 to 59.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "nanos": {
                                                                                "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "seconds": {
                                                                                "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "timestampValue": {
                                                                        "format": "google-datetime",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "replaceWithInfoTypeConfig": {
                                                        "description": "Replace each matching finding with the name of the info_type.",
                                                        "properties": {},
                                                        "type": "object"
                                                    },
                                                    "timePartConfig": {
                                                        "description": "For use with `Date`, `Timestamp`, and `TimeOfDay`, extract or preserve a\nportion of the value.",
                                                        "properties": {
                                                            "partToExtract": {
                                                                "enum": [
                                                                    "TIME_PART_UNSPECIFIED",
                                                                    "YEAR",
                                                                    "MONTH",
                                                                    "DAY_OF_MONTH",
                                                                    "DAY_OF_WEEK",
                                                                    "WEEK_OF_YEAR",
                                                                    "HOUR_OF_DAY"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "recordTransformations": {
                            "description": "Treat the dataset as structured. Transformations can be applied to\nspecific locations within structured datasets, such as transforming\na column within a table.",
                            "properties": {
                                "fieldTransformations": {
                                    "description": "Transform the record by applying various field transformations.",
                                    "items": {
                                        "description": "The transformation to apply to the field.",
                                        "properties": {
                                            "condition": {
                                                "description": "Only apply the transformation if the condition evaluates to true for the\ngiven `RecordCondition`. The conditions are allowed to reference fields\nthat are not used in the actual transformation. [optional]\n\nExample Use Cases:\n\n- Apply a different bucket transformation to an age column if the zip code\ncolumn for the same record is within a specific range.\n- Redact a field if the date of birth field is greater than 85.",
                                                "properties": {
                                                    "expressions": {
                                                        "description": "An expression.",
                                                        "properties": {
                                                            "conditions": {
                                                                "description": "A collection of conditions.",
                                                                "properties": {
                                                                    "conditions": {
                                                                        "items": {
                                                                            "description": "The field type of `value` and `field` do not need to match to be\nconsidered equal, but not all comparisons are possible.\nEQUAL_TO and NOT_EQUAL_TO attempt to compare even with incompatible types,\nbut all other comparisons are invalid with incompatible types.\nA `value` of type:\n\n- `string` can be compared against all other types\n- `boolean` can only be compared against other booleans\n- `integer` can be compared against doubles or a string if the string value\ncan be parsed as an integer.\n- `double` can be compared against integers or a string if the string can\nbe parsed as a double.\n- `Timestamp` can be compared against strings in RFC 3339 date string\nformat.\n- `TimeOfDay` can be compared against timestamps and strings in the format\nof 'HH:mm:ss'.\n\nIf we fail to compare do to type mismatch, a warning will be given and\nthe condition will evaluate to false.",
                                                                            "properties": {
                                                                                "field": {
                                                                                    "description": "Field within the record this condition is evaluated against. [required]",
                                                                                    "properties": {
                                                                                        "name": {
                                                                                            "description": "Name describing the field.",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "operator": {
                                                                                    "description": "Operator used to compare the field or infoType to the value. [required]",
                                                                                    "enum": [
                                                                                        "RELATIONAL_OPERATOR_UNSPECIFIED",
                                                                                        "EQUAL_TO",
                                                                                        "NOT_EQUAL_TO",
                                                                                        "GREATER_THAN",
                                                                                        "LESS_THAN",
                                                                                        "GREATER_THAN_OR_EQUALS",
                                                                                        "LESS_THAN_OR_EQUALS",
                                                                                        "EXISTS"
                                                                                    ],
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "description": "Value to compare against. [Required, except for `EXISTS` tests.]",
                                                                                    "properties": {
                                                                                        "booleanValue": {
                                                                                            "type": "boolean"
                                                                                        },
                                                                                        "dateValue": {
                                                                                            "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
                                                                                            "properties": {
                                                                                                "day": {
                                                                                                    "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "month": {
                                                                                                    "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "year": {
                                                                                                    "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "dayOfWeekValue": {
                                                                                            "enum": [
                                                                                                "DAY_OF_WEEK_UNSPECIFIED",
                                                                                                "MONDAY",
                                                                                                "TUESDAY",
                                                                                                "WEDNESDAY",
                                                                                                "THURSDAY",
                                                                                                "FRIDAY",
                                                                                                "SATURDAY",
                                                                                                "SUNDAY"
                                                                                            ],
                                                                                            "type": "string"
                                                                                        },
                                                                                        "floatValue": {
                                                                                            "format": "double",
                                                                                            "type": "number"
                                                                                        },
                                                                                        "integerValue": {
                                                                                            "format": "int64",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "stringValue": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "timeValue": {
                                                                                            "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are google.type.Date and `google.protobuf.Timestamp`.",
                                                                                            "properties": {
                                                                                                "hours": {
                                                                                                    "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "minutes": {
                                                                                                    "description": "Minutes of hour of day. Must be from 0 to 59.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "nanos": {
                                                                                                    "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "seconds": {
                                                                                                    "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "timestampValue": {
                                                                                            "format": "google-datetime",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "logicalOperator": {
                                                                "description": "The operator to apply to the result of conditions. Default and currently\nonly supported value is `AND`.",
                                                                "enum": [
                                                                    "LOGICAL_OPERATOR_UNSPECIFIED",
                                                                    "AND"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "fields": {
                                                "description": "Input field(s) to apply the transformation to. [required]",
                                                "items": {
                                                    "description": "General identifier of a data field in a storage service.",
                                                    "properties": {
                                                        "name": {
                                                            "description": "Name describing the field.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "infoTypeTransformations": {
                                                "description": "Treat the contents of the field as free text, and selectively\ntransform content that matches an `InfoType`.",
                                                "properties": {
                                                    "transformations": {
                                                        "description": "Transformation for each infoType. Cannot specify more than one\nfor a given infoType. [required]",
                                                        "items": {
                                                            "description": "A transformation to apply to text that is identified as a specific\ninfo_type.",
                                                            "properties": {
                                                                "infoTypes": {
                                                                    "description": "InfoTypes to apply the transformation to. An empty list will cause\nthis transformation to apply to all findings that correspond to\ninfoTypes that were requested in `InspectConfig`.",
                                                                    "items": {
                                                                        "description": "Type of information detected by the API.",
                                                                        "properties": {
                                                                            "name": {
                                                                                "description": "Name of the information type. Either a name of your choosing when\ncreating a CustomInfoType, or one of the names listed\nat https://cloud.google.com/dlp/docs/infotypes-reference when specifying\na built-in type. InfoType names should conform to the pattern\n[a-zA-Z0-9_]{1,64}.",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "primitiveTransformation": {
                                                                    "description": "Primitive transformation to apply to the infoType. [required]",
                                                                    "properties": {
                                                                        "bucketingConfig": {
                                                                            "description": "Generalization function that buckets values based on ranges. The ranges and\nreplacement values are dynamically provided by the user for custom behavior,\nsuch as 1-30 -> LOW 31-65 -> MEDIUM 66-100 -> HIGH\nThis can be used on\ndata of type: number, long, string, timestamp.\nIf the bound `Value` type differs from the type of data being transformed, we\nwill first attempt converting the type of the data to be transformed to match\nthe type of the bound before comparing.\nSee https://cloud.google.com/dlp/docs/concepts-bucketing to learn more.",
                                                                            "properties": {
                                                                                "buckets": {
                                                                                    "description": "Set of buckets. Ranges must be non-overlapping.",
                                                                                    "items": {
                                                                                        "description": "Bucket is represented as a range, along with replacement values.",
                                                                                        "properties": {
                                                                                            "max": {
                                                                                                "description": "Upper bound of the range, exclusive; type must match min.",
                                                                                                "properties": {
                                                                                                    "booleanValue": {
                                                                                                        "type": "boolean"
                                                                                                    },
                                                                                                    "dateValue": {
                                                                                                        "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
                                                                                                        "properties": {
                                                                                                            "day": {
                                                                                                                "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.",
                                                                                                                "format": "int32",
                                                                                                                "type": "integer"
                                                                                                            },
                                                                                                            "month": {
                                                                                                                "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.",
                                                                                                                "format": "int32",
                                                                                                                "type": "integer"
                                                                                                            },
                                                                                                            "year": {
                                                                                                                "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
                                                                                                                "format": "int32",
                                                                                                                "type": "integer"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "dayOfWeekValue": {
                                                                                                        "enum": [
                                                                                                            "DAY_OF_WEEK_UNSPECIFIED",
                                                                                                            "MONDAY",
                                                                                                            "TUESDAY",
                                                                                                            "WEDNESDAY",
                                                                                                            "THURSDAY",
                                                                                                            "FRIDAY",
                                                                                                            "SATURDAY",
                                                                                                            "SUNDAY"
                                                                                                        ],
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "floatValue": {
                                                                                                        "format": "double",
                                                                                                        "type": "number"
                                                                                                    },
                                                                                                    "integerValue": {
                                                                                                        "format": "int64",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "stringValue": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "timeValue": {
                                                                                                        "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are google.type.Date and `google.protobuf.Timestamp`.",
                                                                                                        "properties": {
                                                                                                            "hours": {
                                                                                                                "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time.",
                                                                                                                "format": "int32",
                                                                                                                "type": "integer"
                                                                                                            },
                                                                                                            "minutes": {
                                                                                                                "description": "Minutes of hour of day. Must be from 0 to 59.",
                                                                                                                "format": "int32",
                                                                                                                "type": "integer"
                                                                                                            },
                                                                                                            "nanos": {
                                                                                                                "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                                                                                                                "format": "int32",
                                                                                                                "type": "integer"
                                                                                                            },
                                                                                                            "seconds": {
                                                                                                                "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds.",
                                                                                                                "format": "int32",
                                                                                                                "type": "integer"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "timestampValue": {
                                                                                                        "format": "google-datetime",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "min": {
                                                                                                "description": "Lower bound of the range, inclusive. Type should be the same as max if\nused.",
                                                                                                "properties": {
                                                                                                    "booleanValue": {
                                                                                                        "type": "boolean"
                                                                                                    },
                                                                                                    "dateValue": {
                                                                                                        "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
                                                                                                        "properties": {
                                                                                                            "day": {
                                                                                                                "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.",
                                                                                                                "format": "int32",
                                                                                                                "type": "integer"
                                                                                                            },
                                                                                                            "month": {
                                                                                                                "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.",
                                                                                                                "format": "int32",
                                                                                                                "type": "integer"
                                                                                                            },
                                                                                                            "year": {
                                                                                                                "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
                                                                                                                "format": "int32",
                                                                                                                "type": "integer"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "dayOfWeekValue": {
                                                                                                        "enum": [
                                                                                                            "DAY_OF_WEEK_UNSPECIFIED",
                                                                                                            "MONDAY",
                                                                                                            "TUESDAY",
                                                                                                            "WEDNESDAY",
                                                                                                            "THURSDAY",
                                                                                                            "FRIDAY",
                                                                                                            "SATURDAY",
                                                                                                            "SUNDAY"
                                                                                                        ],
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "floatValue": {
                                                                                                        "format": "double",
                                                                                                        "type": "number"
                                                                                                    },
                                                                                                    "integerValue": {
                                                                                                        "format": "int64",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "stringValue": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "timeValue": {
                                                                                                        "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are google.type.Date and `google.protobuf.Timestamp`.",
                                                                                                        "properties": {
                                                                                                            "hours": {
                                                                                                                "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time.",
                                                                                                                "format": "int32",
                                                                                                                "type": "integer"
                                                                                                            },
                                                                                                            "minutes": {
                                                                                                                "description": "Minutes of hour of day. Must be from 0 to 59.",
                                                                                                                "format": "int32",
                                                                                                                "type": "integer"
                                                                                                            },
                                                                                                            "nanos": {
                                                                                                                "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                                                                                                                "format": "int32",
                                                                                                                "type": "integer"
                                                                                                            },
                                                                                                            "seconds": {
                                                                                                                "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds.",
                                                                                                                "format": "int32",
                                                                                                                "type": "integer"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "timestampValue": {
                                                                                                        "format": "google-datetime",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "replacementValue": {
                                                                                                "description": "Replacement value for this bucket. If not provided\nthe default behavior will be to hyphenate the min-max range.",
                                                                                                "properties": {
                                                                                                    "booleanValue": {
                                                                                                        "type": "boolean"
                                                                                                    },
                                                                                                    "dateValue": {
                                                                                                        "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
                                                                                                        "properties": {
                                                                                                            "day": {
                                                                                                                "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.",
                                                                                                                "format": "int32",
                                                                                                                "type": "integer"
                                                                                                            },
                                                                                                            "month": {
                                                                                                                "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.",
                                                                                                                "format": "int32",
                                                                                                                "type": "integer"
                                                                                                            },
                                                                                                            "year": {
                                                                                                                "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
                                                                                                                "format": "int32",
                                                                                                                "type": "integer"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "dayOfWeekValue": {
                                                                                                        "enum": [
                                                                                                            "DAY_OF_WEEK_UNSPECIFIED",
                                                                                                            "MONDAY",
                                                                                                            "TUESDAY",
                                                                                                            "WEDNESDAY",
                                                                                                            "THURSDAY",
                                                                                                            "FRIDAY",
                                                                                                            "SATURDAY",
                                                                                                            "SUNDAY"
                                                                                                        ],
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "floatValue": {
                                                                                                        "format": "double",
                                                                                                        "type": "number"
                                                                                                    },
                                                                                                    "integerValue": {
                                                                                                        "format": "int64",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "stringValue": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "timeValue": {
                                                                                                        "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are google.type.Date and `google.protobuf.Timestamp`.",
                                                                                                        "properties": {
                                                                                                            "hours": {
                                                                                                                "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time.",
                                                                                                                "format": "int32",
                                                                                                                "type": "integer"
                                                                                                            },
                                                                                                            "minutes": {
                                                                                                                "description": "Minutes of hour of day. Must be from 0 to 59.",
                                                                                                                "format": "int32",
                                                                                                                "type": "integer"
                                                                                                            },
                                                                                                            "nanos": {
                                                                                                                "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                                                                                                                "format": "int32",
                                                                                                                "type": "integer"
                                                                                                            },
                                                                                                            "seconds": {
                                                                                                                "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds.",
                                                                                                                "format": "int32",
                                                                                                                "type": "integer"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "timestampValue": {
                                                                                                        "format": "google-datetime",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "characterMaskConfig": {
                                                                            "description": "Partially mask a string by replacing a given number of characters with a\nfixed character. Masking can start from the beginning or end of the string.\nThis can be used on data of any type (numbers, longs, and so on) and when\nde-identifying structured data we'll attempt to preserve the original data's\ntype. (This allows you to take a long like 123 and modify it to a string like\n**3.",
                                                                            "properties": {
                                                                                "charactersToIgnore": {
                                                                                    "description": "When masking a string, items in this list will be skipped when replacing.\nFor example, if your string is 555-555-5555 and you ask us to skip `-` and\nmask 5 chars with * we would produce ***-*55-5555.",
                                                                                    "items": {
                                                                                        "description": "Characters to skip when doing deidentification of a value. These will be left\nalone and skipped.",
                                                                                        "properties": {
                                                                                            "charactersToSkip": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "commonCharactersToIgnore": {
                                                                                                "enum": [
                                                                                                    "COMMON_CHARS_TO_IGNORE_UNSPECIFIED",
                                                                                                    "NUMERIC",
                                                                                                    "ALPHA_UPPER_CASE",
                                                                                                    "ALPHA_LOWER_CASE",
                                                                                                    "PUNCTUATION",
                                                                                                    "WHITESPACE"
                                                                                                ],
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "maskingCharacter": {
                                                                                    "description": "Character to mask the sensitive values&mdash;for example, \"*\" for an\nalphabetic string such as name, or \"0\" for a numeric string such as ZIP\ncode or credit card number. String must have length 1. If not supplied, we\nwill default to \"*\" for strings, 0 for digits.",
                                                                                    "type": "string"
                                                                                },
                                                                                "numberToMask": {
                                                                                    "description": "Number of characters to mask. If not set, all matching chars will be\nmasked. Skipped characters do not count towards this tally.",
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                },
                                                                                "reverseOrder": {
                                                                                    "description": "Mask characters in reverse order. For example, if `masking_character` is\n'0', number_to_mask is 14, and `reverse_order` is false, then\n1234-5678-9012-3456 -> 00000000000000-3456\nIf `masking_character` is '*', `number_to_mask` is 3, and `reverse_order`\nis true, then 12345 -> 12***",
                                                                                    "type": "boolean"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "cryptoHashConfig": {
                                                                            "description": "Pseudonymization method that generates surrogates via cryptographic hashing.\nUses SHA-256.\nThe key size must be either 32 or 64 bytes.\nOutputs a base64 encoded representation of the hashed output\n(for example, L7k0BHmF1ha5U3NfGykjro4xWi1MPVQPjhMAZbSV9mM=).\nCurrently, only string and integer values can be hashed.\nSee https://cloud.google.com/dlp/docs/pseudonymization to learn more.",
                                                                            "properties": {
                                                                                "cryptoKey": {
                                                                                    "description": "The key used by the hash function.",
                                                                                    "properties": {
                                                                                        "kmsWrapped": {
                                                                                            "description": "Include to use an existing data crypto key wrapped by KMS.\nThe wrapped key must be a 128/192/256 bit key.\nAuthorization requires the following IAM permissions when sending a request\nto perform a crypto transformation using a kms-wrapped crypto key:\ndlp.kms.encrypt",
                                                                                            "properties": {
                                                                                                "cryptoKeyName": {
                                                                                                    "description": "The resource name of the KMS CryptoKey to use for unwrapping. [required]",
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "wrappedKey": {
                                                                                                    "description": "The wrapped data crypto key. [required]",
                                                                                                    "format": "byte",
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "transient": {
                                                                                            "description": "Use this to have a random data crypto key generated.\nIt will be discarded after the request finishes.",
                                                                                            "properties": {
                                                                                                "name": {
                                                                                                    "description": "Name of the key. [required]\nThis is an arbitrary string used to differentiate different keys.\nA unique key is generated per name: two separate `TransientCryptoKey`\nprotos share the same generated key if their names are the same.\nWhen the data crypto key is generated, this name is not used in any way\n(repeating the api call will result in a different key being generated).",
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "unwrapped": {
                                                                                            "description": "Using raw keys is prone to security risks due to accidentally\nleaking the key. Choose another type of key if possible.",
                                                                                            "properties": {
                                                                                                "key": {
                                                                                                    "description": "A 128/192/256 bit key. [required]",
                                                                                                    "format": "byte",
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "cryptoReplaceFfxFpeConfig": {
                                                                            "description": "Note: We recommend using  CryptoDeterministicConfig for all use cases which\ndo not require preserving the input alphabet space and size, plus warrant\nreferential integrity.",
                                                                            "properties": {
                                                                                "commonAlphabet": {
                                                                                    "enum": [
                                                                                        "FFX_COMMON_NATIVE_ALPHABET_UNSPECIFIED",
                                                                                        "NUMERIC",
                                                                                        "HEXADECIMAL",
                                                                                        "UPPER_CASE_ALPHA_NUMERIC",
                                                                                        "ALPHA_NUMERIC"
                                                                                    ],
                                                                                    "type": "string"
                                                                                },
                                                                                "context": {
                                                                                    "description": "The 'tweak', a context may be used for higher security since the same\nidentifier in two different contexts won't be given the same surrogate. If\nthe context is not set, a default tweak will be used.\n\nIf the context is set but:\n\n1. there is no record present when transforming a given value or\n1. the field is not present when transforming a given value,\n\na default tweak will be used.\n\nNote that case (1) is expected when an `InfoTypeTransformation` is\napplied to both structured and non-structured `ContentItem`s.\nCurrently, the referenced field may be of value type integer or string.\n\nThe tweak is constructed as a sequence of bytes in big endian byte order\nsuch that:\n\n- a 64 bit integer is encoded followed by a single byte of value 1\n- a string is encoded in UTF-8 format followed by a single byte of value 2",
                                                                                    "properties": {
                                                                                        "name": {
                                                                                            "description": "Name describing the field.",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "cryptoKey": {
                                                                                    "description": "The key used by the encryption algorithm. [required]",
                                                                                    "properties": {
                                                                                        "kmsWrapped": {
                                                                                            "description": "Include to use an existing data crypto key wrapped by KMS.\nThe wrapped key must be a 128/192/256 bit key.\nAuthorization requires the following IAM permissions when sending a request\nto perform a crypto transformation using a kms-wrapped crypto key:\ndlp.kms.encrypt",
                                                                                            "properties": {
                                                                                                "cryptoKeyName": {
                                                                                                    "description": "The resource name of the KMS CryptoKey to use for unwrapping. [required]",
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "wrappedKey": {
                                                                                                    "description": "The wrapped data crypto key. [required]",
                                                                                                    "format": "byte",
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "transient": {
                                                                                            "description": "Use this to have a random data crypto key generated.\nIt will be discarded after the request finishes.",
                                                                                            "properties": {
                                                                                                "name": {
                                                                                                    "description": "Name of the key. [required]\nThis is an arbitrary string used to differentiate different keys.\nA unique key is generated per name: two separate `TransientCryptoKey`\nprotos share the same generated key if their names are the same.\nWhen the data crypto key is generated, this name is not used in any way\n(repeating the api call will result in a different key being generated).",
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "unwrapped": {
                                                                                            "description": "Using raw keys is prone to security risks due to accidentally\nleaking the key. Choose another type of key if possible.",
                                                                                            "properties": {
                                                                                                "key": {
                                                                                                    "description": "A 128/192/256 bit key. [required]",
                                                                                                    "format": "byte",
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "customAlphabet": {
                                                                                    "description": "This is supported by mapping these to the alphanumeric characters\nthat the FFX mode natively supports. This happens before/after\nencryption/decryption.\nEach character listed must appear only once.\nNumber of characters must be in the range [2, 62].\nThis must be encoded as ASCII.\nThe order of characters does not matter.",
                                                                                    "type": "string"
                                                                                },
                                                                                "radix": {
                                                                                    "description": "The native way to select the alphabet. Must be in the range [2, 62].",
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                },
                                                                                "surrogateInfoType": {
                                                                                    "description": "The custom infoType to annotate the surrogate with.\nThis annotation will be applied to the surrogate by prefixing it with\nthe name of the custom infoType followed by the number of\ncharacters comprising the surrogate. The following scheme defines the\nformat: info_type_name(surrogate_character_count):surrogate\n\nFor example, if the name of custom infoType is 'MY_TOKEN_INFO_TYPE' and\nthe surrogate is 'abc', the full replacement value\nwill be: 'MY_TOKEN_INFO_TYPE(3):abc'\n\nThis annotation identifies the surrogate when inspecting content using the\ncustom infoType\n[`SurrogateType`](/dlp/docs/reference/rest/v2/InspectConfig#surrogatetype).\nThis facilitates reversal of the surrogate when it occurs in free text.\n\nIn order for inspection to work properly, the name of this infoType must\nnot occur naturally anywhere in your data; otherwise, inspection may\nfind a surrogate that does not correspond to an actual identifier.\nTherefore, choose your custom infoType name carefully after considering\nwhat your data looks like. One way to select a name that has a high chance\nof yielding reliable detection is to include one or more unicode characters\nthat are highly improbable to exist in your data.\nFor example, assuming your data is entered from a regular ASCII keyboard,\nthe symbol with the hex code point 29DD might be used like so:\n⧝MY_TOKEN_TYPE",
                                                                                    "properties": {
                                                                                        "name": {
                                                                                            "description": "Name of the information type. Either a name of your choosing when\ncreating a CustomInfoType, or one of the names listed\nat https://cloud.google.com/dlp/docs/infotypes-reference when specifying\na built-in type. InfoType names should conform to the pattern\n[a-zA-Z0-9_]{1,64}.",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "dateShiftConfig": {
                                                                            "description": "Shifts dates by random number of days, with option to be consistent for the\nsame context. See https://cloud.google.com/dlp/docs/concepts-date-shifting\nto learn more.",
                                                                            "properties": {
                                                                                "context": {
                                                                                    "description": "Points to the field that contains the context, for example, an entity id.\nIf set, must also set method. If set, shift will be consistent for the\ngiven context.",
                                                                                    "properties": {
                                                                                        "name": {
                                                                                            "description": "Name describing the field.",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "cryptoKey": {
                                                                                    "description": "Causes the shift to be computed based on this key and the context. This\nresults in the same shift for the same context and crypto_key.",
                                                                                    "properties": {
                                                                                        "kmsWrapped": {
                                                                                            "description": "Include to use an existing data crypto key wrapped by KMS.\nThe wrapped key must be a 128/192/256 bit key.\nAuthorization requires the following IAM permissions when sending a request\nto perform a crypto transformation using a kms-wrapped crypto key:\ndlp.kms.encrypt",
                                                                                            "properties": {
                                                                                                "cryptoKeyName": {
                                                                                                    "description": "The resource name of the KMS CryptoKey to use for unwrapping. [required]",
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "wrappedKey": {
                                                                                                    "description": "The wrapped data crypto key. [required]",
                                                                                                    "format": "byte",
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "transient": {
                                                                                            "description": "Use this to have a random data crypto key generated.\nIt will be discarded after the request finishes.",
                                                                                            "properties": {
                                                                                                "name": {
                                                                                                    "description": "Name of the key. [required]\nThis is an arbitrary string used to differentiate different keys.\nA unique key is generated per name: two separate `TransientCryptoKey`\nprotos share the same generated key if their names are the same.\nWhen the data crypto key is generated, this name is not used in any way\n(repeating the api call will result in a different key being generated).",
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "unwrapped": {
                                                                                            "description": "Using raw keys is prone to security risks due to accidentally\nleaking the key. Choose another type of key if possible.",
                                                                                            "properties": {
                                                                                                "key": {
                                                                                                    "description": "A 128/192/256 bit key. [required]",
                                                                                                    "format": "byte",
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "lowerBoundDays": {
                                                                                    "description": "For example, -5 means shift date to at most 5 days back in the past.\n[Required]",
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                },
                                                                                "upperBoundDays": {
                                                                                    "description": "Range of shift in days. Actual shift will be selected at random within this\nrange (inclusive ends). Negative means shift to earlier in time. Must not\nbe more than 365250 days (1000 years) each direction.\n\nFor example, 3 means shift date to at most 3 days into the future.\n[Required]",
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "fixedSizeBucketingConfig": {
                                                                            "description": "Buckets values based on fixed size ranges. The\nBucketing transformation can provide all of this functionality,\nbut requires more configuration. This message is provided as a convenience to\nthe user for simple bucketing strategies.\n\nThe transformed value will be a hyphenated string of\n<lower_bound>-<upper_bound>, i.e if lower_bound = 10 and upper_bound = 20\nall values that are within this bucket will be replaced with \"10-20\".\n\nThis can be used on data of type: double, long.\n\nIf the bound Value type differs from the type of data\nbeing transformed, we will first attempt converting the type of the data to\nbe transformed to match the type of the bound before comparing.\n\nSee https://cloud.google.com/dlp/docs/concepts-bucketing to learn more.",
                                                                            "properties": {
                                                                                "bucketSize": {
                                                                                    "description": "Size of each bucket (except for minimum and maximum buckets). So if\n`lower_bound` = 10, `upper_bound` = 89, and `bucket_size` = 10, then the\nfollowing buckets would be used: -10, 10-20, 20-30, 30-40, 40-50, 50-60,\n60-70, 70-80, 80-89, 89+. Precision up to 2 decimals works. [Required].",
                                                                                    "format": "double",
                                                                                    "type": "number"
                                                                                },
                                                                                "lowerBound": {
                                                                                    "description": "Lower bound value of buckets. All values less than `lower_bound` are\ngrouped together into a single bucket; for example if `lower_bound` = 10,\nthen all values less than 10 are replaced with the value “-10”. [Required].",
                                                                                    "properties": {
                                                                                        "booleanValue": {
                                                                                            "type": "boolean"
                                                                                        },
                                                                                        "dateValue": {
                                                                                            "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
                                                                                            "properties": {
                                                                                                "day": {
                                                                                                    "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "month": {
                                                                                                    "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "year": {
                                                                                                    "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "dayOfWeekValue": {
                                                                                            "enum": [
                                                                                                "DAY_OF_WEEK_UNSPECIFIED",
                                                                                                "MONDAY",
                                                                                                "TUESDAY",
                                                                                                "WEDNESDAY",
                                                                                                "THURSDAY",
                                                                                                "FRIDAY",
                                                                                                "SATURDAY",
                                                                                                "SUNDAY"
                                                                                            ],
                                                                                            "type": "string"
                                                                                        },
                                                                                        "floatValue": {
                                                                                            "format": "double",
                                                                                            "type": "number"
                                                                                        },
                                                                                        "integerValue": {
                                                                                            "format": "int64",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "stringValue": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "timeValue": {
                                                                                            "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are google.type.Date and `google.protobuf.Timestamp`.",
                                                                                            "properties": {
                                                                                                "hours": {
                                                                                                    "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "minutes": {
                                                                                                    "description": "Minutes of hour of day. Must be from 0 to 59.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "nanos": {
                                                                                                    "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "seconds": {
                                                                                                    "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "timestampValue": {
                                                                                            "format": "google-datetime",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "upperBound": {
                                                                                    "description": "Upper bound value of buckets. All values greater than upper_bound are\ngrouped together into a single bucket; for example if `upper_bound` = 89,\nthen all values greater than 89 are replaced with the value “89+”.\n[Required].",
                                                                                    "properties": {
                                                                                        "booleanValue": {
                                                                                            "type": "boolean"
                                                                                        },
                                                                                        "dateValue": {
                                                                                            "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
                                                                                            "properties": {
                                                                                                "day": {
                                                                                                    "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "month": {
                                                                                                    "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "year": {
                                                                                                    "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "dayOfWeekValue": {
                                                                                            "enum": [
                                                                                                "DAY_OF_WEEK_UNSPECIFIED",
                                                                                                "MONDAY",
                                                                                                "TUESDAY",
                                                                                                "WEDNESDAY",
                                                                                                "THURSDAY",
                                                                                                "FRIDAY",
                                                                                                "SATURDAY",
                                                                                                "SUNDAY"
                                                                                            ],
                                                                                            "type": "string"
                                                                                        },
                                                                                        "floatValue": {
                                                                                            "format": "double",
                                                                                            "type": "number"
                                                                                        },
                                                                                        "integerValue": {
                                                                                            "format": "int64",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "stringValue": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "timeValue": {
                                                                                            "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are google.type.Date and `google.protobuf.Timestamp`.",
                                                                                            "properties": {
                                                                                                "hours": {
                                                                                                    "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "minutes": {
                                                                                                    "description": "Minutes of hour of day. Must be from 0 to 59.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "nanos": {
                                                                                                    "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "seconds": {
                                                                                                    "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "timestampValue": {
                                                                                            "format": "google-datetime",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "redactConfig": {
                                                                            "description": "Redact a given value. For example, if used with an `InfoTypeTransformation`\ntransforming PHONE_NUMBER, and input 'My phone number is 206-555-0123', the\noutput would be 'My phone number is '.",
                                                                            "properties": {},
                                                                            "type": "object"
                                                                        },
                                                                        "replaceConfig": {
                                                                            "description": "Replace each input value with a given `Value`.",
                                                                            "properties": {
                                                                                "newValue": {
                                                                                    "description": "Value to replace it with.",
                                                                                    "properties": {
                                                                                        "booleanValue": {
                                                                                            "type": "boolean"
                                                                                        },
                                                                                        "dateValue": {
                                                                                            "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
                                                                                            "properties": {
                                                                                                "day": {
                                                                                                    "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "month": {
                                                                                                    "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "year": {
                                                                                                    "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "dayOfWeekValue": {
                                                                                            "enum": [
                                                                                                "DAY_OF_WEEK_UNSPECIFIED",
                                                                                                "MONDAY",
                                                                                                "TUESDAY",
                                                                                                "WEDNESDAY",
                                                                                                "THURSDAY",
                                                                                                "FRIDAY",
                                                                                                "SATURDAY",
                                                                                                "SUNDAY"
                                                                                            ],
                                                                                            "type": "string"
                                                                                        },
                                                                                        "floatValue": {
                                                                                            "format": "double",
                                                                                            "type": "number"
                                                                                        },
                                                                                        "integerValue": {
                                                                                            "format": "int64",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "stringValue": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "timeValue": {
                                                                                            "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are google.type.Date and `google.protobuf.Timestamp`.",
                                                                                            "properties": {
                                                                                                "hours": {
                                                                                                    "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "minutes": {
                                                                                                    "description": "Minutes of hour of day. Must be from 0 to 59.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "nanos": {
                                                                                                    "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "seconds": {
                                                                                                    "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "timestampValue": {
                                                                                            "format": "google-datetime",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "replaceWithInfoTypeConfig": {
                                                                            "description": "Replace each matching finding with the name of the info_type.",
                                                                            "properties": {},
                                                                            "type": "object"
                                                                        },
                                                                        "timePartConfig": {
                                                                            "description": "For use with `Date`, `Timestamp`, and `TimeOfDay`, extract or preserve a\nportion of the value.",
                                                                            "properties": {
                                                                                "partToExtract": {
                                                                                    "enum": [
                                                                                        "TIME_PART_UNSPECIFIED",
                                                                                        "YEAR",
                                                                                        "MONTH",
                                                                                        "DAY_OF_MONTH",
                                                                                        "DAY_OF_WEEK",
                                                                                        "WEEK_OF_YEAR",
                                                                                        "HOUR_OF_DAY"
                                                                                    ],
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "primitiveTransformation": {
                                                "description": "Apply the transformation to the entire field.",
                                                "properties": {
                                                    "bucketingConfig": {
                                                        "description": "Generalization function that buckets values based on ranges. The ranges and\nreplacement values are dynamically provided by the user for custom behavior,\nsuch as 1-30 -> LOW 31-65 -> MEDIUM 66-100 -> HIGH\nThis can be used on\ndata of type: number, long, string, timestamp.\nIf the bound `Value` type differs from the type of data being transformed, we\nwill first attempt converting the type of the data to be transformed to match\nthe type of the bound before comparing.\nSee https://cloud.google.com/dlp/docs/concepts-bucketing to learn more.",
                                                        "properties": {
                                                            "buckets": {
                                                                "description": "Set of buckets. Ranges must be non-overlapping.",
                                                                "items": {
                                                                    "description": "Bucket is represented as a range, along with replacement values.",
                                                                    "properties": {
                                                                        "max": {
                                                                            "description": "Upper bound of the range, exclusive; type must match min.",
                                                                            "properties": {
                                                                                "booleanValue": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "dateValue": {
                                                                                    "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
                                                                                    "properties": {
                                                                                        "day": {
                                                                                            "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "month": {
                                                                                            "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "year": {
                                                                                            "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "dayOfWeekValue": {
                                                                                    "enum": [
                                                                                        "DAY_OF_WEEK_UNSPECIFIED",
                                                                                        "MONDAY",
                                                                                        "TUESDAY",
                                                                                        "WEDNESDAY",
                                                                                        "THURSDAY",
                                                                                        "FRIDAY",
                                                                                        "SATURDAY",
                                                                                        "SUNDAY"
                                                                                    ],
                                                                                    "type": "string"
                                                                                },
                                                                                "floatValue": {
                                                                                    "format": "double",
                                                                                    "type": "number"
                                                                                },
                                                                                "integerValue": {
                                                                                    "format": "int64",
                                                                                    "type": "string"
                                                                                },
                                                                                "stringValue": {
                                                                                    "type": "string"
                                                                                },
                                                                                "timeValue": {
                                                                                    "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are google.type.Date and `google.protobuf.Timestamp`.",
                                                                                    "properties": {
                                                                                        "hours": {
                                                                                            "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "minutes": {
                                                                                            "description": "Minutes of hour of day. Must be from 0 to 59.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "nanos": {
                                                                                            "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "seconds": {
                                                                                            "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "timestampValue": {
                                                                                    "format": "google-datetime",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "min": {
                                                                            "description": "Lower bound of the range, inclusive. Type should be the same as max if\nused.",
                                                                            "properties": {
                                                                                "booleanValue": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "dateValue": {
                                                                                    "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
                                                                                    "properties": {
                                                                                        "day": {
                                                                                            "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "month": {
                                                                                            "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "year": {
                                                                                            "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "dayOfWeekValue": {
                                                                                    "enum": [
                                                                                        "DAY_OF_WEEK_UNSPECIFIED",
                                                                                        "MONDAY",
                                                                                        "TUESDAY",
                                                                                        "WEDNESDAY",
                                                                                        "THURSDAY",
                                                                                        "FRIDAY",
                                                                                        "SATURDAY",
                                                                                        "SUNDAY"
                                                                                    ],
                                                                                    "type": "string"
                                                                                },
                                                                                "floatValue": {
                                                                                    "format": "double",
                                                                                    "type": "number"
                                                                                },
                                                                                "integerValue": {
                                                                                    "format": "int64",
                                                                                    "type": "string"
                                                                                },
                                                                                "stringValue": {
                                                                                    "type": "string"
                                                                                },
                                                                                "timeValue": {
                                                                                    "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are google.type.Date and `google.protobuf.Timestamp`.",
                                                                                    "properties": {
                                                                                        "hours": {
                                                                                            "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "minutes": {
                                                                                            "description": "Minutes of hour of day. Must be from 0 to 59.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "nanos": {
                                                                                            "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "seconds": {
                                                                                            "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "timestampValue": {
                                                                                    "format": "google-datetime",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "replacementValue": {
                                                                            "description": "Replacement value for this bucket. If not provided\nthe default behavior will be to hyphenate the min-max range.",
                                                                            "properties": {
                                                                                "booleanValue": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "dateValue": {
                                                                                    "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
                                                                                    "properties": {
                                                                                        "day": {
                                                                                            "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "month": {
                                                                                            "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "year": {
                                                                                            "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "dayOfWeekValue": {
                                                                                    "enum": [
                                                                                        "DAY_OF_WEEK_UNSPECIFIED",
                                                                                        "MONDAY",
                                                                                        "TUESDAY",
                                                                                        "WEDNESDAY",
                                                                                        "THURSDAY",
                                                                                        "FRIDAY",
                                                                                        "SATURDAY",
                                                                                        "SUNDAY"
                                                                                    ],
                                                                                    "type": "string"
                                                                                },
                                                                                "floatValue": {
                                                                                    "format": "double",
                                                                                    "type": "number"
                                                                                },
                                                                                "integerValue": {
                                                                                    "format": "int64",
                                                                                    "type": "string"
                                                                                },
                                                                                "stringValue": {
                                                                                    "type": "string"
                                                                                },
                                                                                "timeValue": {
                                                                                    "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are google.type.Date and `google.protobuf.Timestamp`.",
                                                                                    "properties": {
                                                                                        "hours": {
                                                                                            "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "minutes": {
                                                                                            "description": "Minutes of hour of day. Must be from 0 to 59.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "nanos": {
                                                                                            "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "seconds": {
                                                                                            "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds.",
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "timestampValue": {
                                                                                    "format": "google-datetime",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "characterMaskConfig": {
                                                        "description": "Partially mask a string by replacing a given number of characters with a\nfixed character. Masking can start from the beginning or end of the string.\nThis can be used on data of any type (numbers, longs, and so on) and when\nde-identifying structured data we'll attempt to preserve the original data's\ntype. (This allows you to take a long like 123 and modify it to a string like\n**3.",
                                                        "properties": {
                                                            "charactersToIgnore": {
                                                                "description": "When masking a string, items in this list will be skipped when replacing.\nFor example, if your string is 555-555-5555 and you ask us to skip `-` and\nmask 5 chars with * we would produce ***-*55-5555.",
                                                                "items": {
                                                                    "description": "Characters to skip when doing deidentification of a value. These will be left\nalone and skipped.",
                                                                    "properties": {
                                                                        "charactersToSkip": {
                                                                            "type": "string"
                                                                        },
                                                                        "commonCharactersToIgnore": {
                                                                            "enum": [
                                                                                "COMMON_CHARS_TO_IGNORE_UNSPECIFIED",
                                                                                "NUMERIC",
                                                                                "ALPHA_UPPER_CASE",
                                                                                "ALPHA_LOWER_CASE",
                                                                                "PUNCTUATION",
                                                                                "WHITESPACE"
                                                                            ],
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "maskingCharacter": {
                                                                "description": "Character to mask the sensitive values&mdash;for example, \"*\" for an\nalphabetic string such as name, or \"0\" for a numeric string such as ZIP\ncode or credit card number. String must have length 1. If not supplied, we\nwill default to \"*\" for strings, 0 for digits.",
                                                                "type": "string"
                                                            },
                                                            "numberToMask": {
                                                                "description": "Number of characters to mask. If not set, all matching chars will be\nmasked. Skipped characters do not count towards this tally.",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "reverseOrder": {
                                                                "description": "Mask characters in reverse order. For example, if `masking_character` is\n'0', number_to_mask is 14, and `reverse_order` is false, then\n1234-5678-9012-3456 -> 00000000000000-3456\nIf `masking_character` is '*', `number_to_mask` is 3, and `reverse_order`\nis true, then 12345 -> 12***",
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "cryptoHashConfig": {
                                                        "description": "Pseudonymization method that generates surrogates via cryptographic hashing.\nUses SHA-256.\nThe key size must be either 32 or 64 bytes.\nOutputs a base64 encoded representation of the hashed output\n(for example, L7k0BHmF1ha5U3NfGykjro4xWi1MPVQPjhMAZbSV9mM=).\nCurrently, only string and integer values can be hashed.\nSee https://cloud.google.com/dlp/docs/pseudonymization to learn more.",
                                                        "properties": {
                                                            "cryptoKey": {
                                                                "description": "The key used by the hash function.",
                                                                "properties": {
                                                                    "kmsWrapped": {
                                                                        "description": "Include to use an existing data crypto key wrapped by KMS.\nThe wrapped key must be a 128/192/256 bit key.\nAuthorization requires the following IAM permissions when sending a request\nto perform a crypto transformation using a kms-wrapped crypto key:\ndlp.kms.encrypt",
                                                                        "properties": {
                                                                            "cryptoKeyName": {
                                                                                "description": "The resource name of the KMS CryptoKey to use for unwrapping. [required]",
                                                                                "type": "string"
                                                                            },
                                                                            "wrappedKey": {
                                                                                "description": "The wrapped data crypto key. [required]",
                                                                                "format": "byte",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "transient": {
                                                                        "description": "Use this to have a random data crypto key generated.\nIt will be discarded after the request finishes.",
                                                                        "properties": {
                                                                            "name": {
                                                                                "description": "Name of the key. [required]\nThis is an arbitrary string used to differentiate different keys.\nA unique key is generated per name: two separate `TransientCryptoKey`\nprotos share the same generated key if their names are the same.\nWhen the data crypto key is generated, this name is not used in any way\n(repeating the api call will result in a different key being generated).",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "unwrapped": {
                                                                        "description": "Using raw keys is prone to security risks due to accidentally\nleaking the key. Choose another type of key if possible.",
                                                                        "properties": {
                                                                            "key": {
                                                                                "description": "A 128/192/256 bit key. [required]",
                                                                                "format": "byte",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "cryptoReplaceFfxFpeConfig": {
                                                        "description": "Note: We recommend using  CryptoDeterministicConfig for all use cases which\ndo not require preserving the input alphabet space and size, plus warrant\nreferential integrity.",
                                                        "properties": {
                                                            "commonAlphabet": {
                                                                "enum": [
                                                                    "FFX_COMMON_NATIVE_ALPHABET_UNSPECIFIED",
                                                                    "NUMERIC",
                                                                    "HEXADECIMAL",
                                                                    "UPPER_CASE_ALPHA_NUMERIC",
                                                                    "ALPHA_NUMERIC"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "context": {
                                                                "description": "The 'tweak', a context may be used for higher security since the same\nidentifier in two different contexts won't be given the same surrogate. If\nthe context is not set, a default tweak will be used.\n\nIf the context is set but:\n\n1. there is no record present when transforming a given value or\n1. the field is not present when transforming a given value,\n\na default tweak will be used.\n\nNote that case (1) is expected when an `InfoTypeTransformation` is\napplied to both structured and non-structured `ContentItem`s.\nCurrently, the referenced field may be of value type integer or string.\n\nThe tweak is constructed as a sequence of bytes in big endian byte order\nsuch that:\n\n- a 64 bit integer is encoded followed by a single byte of value 1\n- a string is encoded in UTF-8 format followed by a single byte of value 2",
                                                                "properties": {
                                                                    "name": {
                                                                        "description": "Name describing the field.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "cryptoKey": {
                                                                "description": "The key used by the encryption algorithm. [required]",
                                                                "properties": {
                                                                    "kmsWrapped": {
                                                                        "description": "Include to use an existing data crypto key wrapped by KMS.\nThe wrapped key must be a 128/192/256 bit key.\nAuthorization requires the following IAM permissions when sending a request\nto perform a crypto transformation using a kms-wrapped crypto key:\ndlp.kms.encrypt",
                                                                        "properties": {
                                                                            "cryptoKeyName": {
                                                                                "description": "The resource name of the KMS CryptoKey to use for unwrapping. [required]",
                                                                                "type": "string"
                                                                            },
                                                                            "wrappedKey": {
                                                                                "description": "The wrapped data crypto key. [required]",
                                                                                "format": "byte",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "transient": {
                                                                        "description": "Use this to have a random data crypto key generated.\nIt will be discarded after the request finishes.",
                                                                        "properties": {
                                                                            "name": {
                                                                                "description": "Name of the key. [required]\nThis is an arbitrary string used to differentiate different keys.\nA unique key is generated per name: two separate `TransientCryptoKey`\nprotos share the same generated key if their names are the same.\nWhen the data crypto key is generated, this name is not used in any way\n(repeating the api call will result in a different key being generated).",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "unwrapped": {
                                                                        "description": "Using raw keys is prone to security risks due to accidentally\nleaking the key. Choose another type of key if possible.",
                                                                        "properties": {
                                                                            "key": {
                                                                                "description": "A 128/192/256 bit key. [required]",
                                                                                "format": "byte",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "customAlphabet": {
                                                                "description": "This is supported by mapping these to the alphanumeric characters\nthat the FFX mode natively supports. This happens before/after\nencryption/decryption.\nEach character listed must appear only once.\nNumber of characters must be in the range [2, 62].\nThis must be encoded as ASCII.\nThe order of characters does not matter.",
                                                                "type": "string"
                                                            },
                                                            "radix": {
                                                                "description": "The native way to select the alphabet. Must be in the range [2, 62].",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "surrogateInfoType": {
                                                                "description": "The custom infoType to annotate the surrogate with.\nThis annotation will be applied to the surrogate by prefixing it with\nthe name of the custom infoType followed by the number of\ncharacters comprising the surrogate. The following scheme defines the\nformat: info_type_name(surrogate_character_count):surrogate\n\nFor example, if the name of custom infoType is 'MY_TOKEN_INFO_TYPE' and\nthe surrogate is 'abc', the full replacement value\nwill be: 'MY_TOKEN_INFO_TYPE(3):abc'\n\nThis annotation identifies the surrogate when inspecting content using the\ncustom infoType\n[`SurrogateType`](/dlp/docs/reference/rest/v2/InspectConfig#surrogatetype).\nThis facilitates reversal of the surrogate when it occurs in free text.\n\nIn order for inspection to work properly, the name of this infoType must\nnot occur naturally anywhere in your data; otherwise, inspection may\nfind a surrogate that does not correspond to an actual identifier.\nTherefore, choose your custom infoType name carefully after considering\nwhat your data looks like. One way to select a name that has a high chance\nof yielding reliable detection is to include one or more unicode characters\nthat are highly improbable to exist in your data.\nFor example, assuming your data is entered from a regular ASCII keyboard,\nthe symbol with the hex code point 29DD might be used like so:\n⧝MY_TOKEN_TYPE",
                                                                "properties": {
                                                                    "name": {
                                                                        "description": "Name of the information type. Either a name of your choosing when\ncreating a CustomInfoType, or one of the names listed\nat https://cloud.google.com/dlp/docs/infotypes-reference when specifying\na built-in type. InfoType names should conform to the pattern\n[a-zA-Z0-9_]{1,64}.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "dateShiftConfig": {
                                                        "description": "Shifts dates by random number of days, with option to be consistent for the\nsame context. See https://cloud.google.com/dlp/docs/concepts-date-shifting\nto learn more.",
                                                        "properties": {
                                                            "context": {
                                                                "description": "Points to the field that contains the context, for example, an entity id.\nIf set, must also set method. If set, shift will be consistent for the\ngiven context.",
                                                                "properties": {
                                                                    "name": {
                                                                        "description": "Name describing the field.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "cryptoKey": {
                                                                "description": "Causes the shift to be computed based on this key and the context. This\nresults in the same shift for the same context and crypto_key.",
                                                                "properties": {
                                                                    "kmsWrapped": {
                                                                        "description": "Include to use an existing data crypto key wrapped by KMS.\nThe wrapped key must be a 128/192/256 bit key.\nAuthorization requires the following IAM permissions when sending a request\nto perform a crypto transformation using a kms-wrapped crypto key:\ndlp.kms.encrypt",
                                                                        "properties": {
                                                                            "cryptoKeyName": {
                                                                                "description": "The resource name of the KMS CryptoKey to use for unwrapping. [required]",
                                                                                "type": "string"
                                                                            },
                                                                            "wrappedKey": {
                                                                                "description": "The wrapped data crypto key. [required]",
                                                                                "format": "byte",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "transient": {
                                                                        "description": "Use this to have a random data crypto key generated.\nIt will be discarded after the request finishes.",
                                                                        "properties": {
                                                                            "name": {
                                                                                "description": "Name of the key. [required]\nThis is an arbitrary string used to differentiate different keys.\nA unique key is generated per name: two separate `TransientCryptoKey`\nprotos share the same generated key if their names are the same.\nWhen the data crypto key is generated, this name is not used in any way\n(repeating the api call will result in a different key being generated).",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "unwrapped": {
                                                                        "description": "Using raw keys is prone to security risks due to accidentally\nleaking the key. Choose another type of key if possible.",
                                                                        "properties": {
                                                                            "key": {
                                                                                "description": "A 128/192/256 bit key. [required]",
                                                                                "format": "byte",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "lowerBoundDays": {
                                                                "description": "For example, -5 means shift date to at most 5 days back in the past.\n[Required]",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "upperBoundDays": {
                                                                "description": "Range of shift in days. Actual shift will be selected at random within this\nrange (inclusive ends). Negative means shift to earlier in time. Must not\nbe more than 365250 days (1000 years) each direction.\n\nFor example, 3 means shift date to at most 3 days into the future.\n[Required]",
                                                                "format": "int32",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "fixedSizeBucketingConfig": {
                                                        "description": "Buckets values based on fixed size ranges. The\nBucketing transformation can provide all of this functionality,\nbut requires more configuration. This message is provided as a convenience to\nthe user for simple bucketing strategies.\n\nThe transformed value will be a hyphenated string of\n<lower_bound>-<upper_bound>, i.e if lower_bound = 10 and upper_bound = 20\nall values that are within this bucket will be replaced with \"10-20\".\n\nThis can be used on data of type: double, long.\n\nIf the bound Value type differs from the type of data\nbeing transformed, we will first attempt converting the type of the data to\nbe transformed to match the type of the bound before comparing.\n\nSee https://cloud.google.com/dlp/docs/concepts-bucketing to learn more.",
                                                        "properties": {
                                                            "bucketSize": {
                                                                "description": "Size of each bucket (except for minimum and maximum buckets). So if\n`lower_bound` = 10, `upper_bound` = 89, and `bucket_size` = 10, then the\nfollowing buckets would be used: -10, 10-20, 20-30, 30-40, 40-50, 50-60,\n60-70, 70-80, 80-89, 89+. Precision up to 2 decimals works. [Required].",
                                                                "format": "double",
                                                                "type": "number"
                                                            },
                                                            "lowerBound": {
                                                                "description": "Lower bound value of buckets. All values less than `lower_bound` are\ngrouped together into a single bucket; for example if `lower_bound` = 10,\nthen all values less than 10 are replaced with the value “-10”. [Required].",
                                                                "properties": {
                                                                    "booleanValue": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "dateValue": {
                                                                        "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
                                                                        "properties": {
                                                                            "day": {
                                                                                "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "month": {
                                                                                "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "year": {
                                                                                "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "dayOfWeekValue": {
                                                                        "enum": [
                                                                            "DAY_OF_WEEK_UNSPECIFIED",
                                                                            "MONDAY",
                                                                            "TUESDAY",
                                                                            "WEDNESDAY",
                                                                            "THURSDAY",
                                                                            "FRIDAY",
                                                                            "SATURDAY",
                                                                            "SUNDAY"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "floatValue": {
                                                                        "format": "double",
                                                                        "type": "number"
                                                                    },
                                                                    "integerValue": {
                                                                        "format": "int64",
                                                                        "type": "string"
                                                                    },
                                                                    "stringValue": {
                                                                        "type": "string"
                                                                    },
                                                                    "timeValue": {
                                                                        "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are google.type.Date and `google.protobuf.Timestamp`.",
                                                                        "properties": {
                                                                            "hours": {
                                                                                "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "minutes": {
                                                                                "description": "Minutes of hour of day. Must be from 0 to 59.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "nanos": {
                                                                                "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "seconds": {
                                                                                "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "timestampValue": {
                                                                        "format": "google-datetime",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "upperBound": {
                                                                "description": "Upper bound value of buckets. All values greater than upper_bound are\ngrouped together into a single bucket; for example if `upper_bound` = 89,\nthen all values greater than 89 are replaced with the value “89+”.\n[Required].",
                                                                "properties": {
                                                                    "booleanValue": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "dateValue": {
                                                                        "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
                                                                        "properties": {
                                                                            "day": {
                                                                                "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "month": {
                                                                                "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "year": {
                                                                                "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "dayOfWeekValue": {
                                                                        "enum": [
                                                                            "DAY_OF_WEEK_UNSPECIFIED",
                                                                            "MONDAY",
                                                                            "TUESDAY",
                                                                            "WEDNESDAY",
                                                                            "THURSDAY",
                                                                            "FRIDAY",
                                                                            "SATURDAY",
                                                                            "SUNDAY"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "floatValue": {
                                                                        "format": "double",
                                                                        "type": "number"
                                                                    },
                                                                    "integerValue": {
                                                                        "format": "int64",
                                                                        "type": "string"
                                                                    },
                                                                    "stringValue": {
                                                                        "type": "string"
                                                                    },
                                                                    "timeValue": {
                                                                        "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are google.type.Date and `google.protobuf.Timestamp`.",
                                                                        "properties": {
                                                                            "hours": {
                                                                                "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "minutes": {
                                                                                "description": "Minutes of hour of day. Must be from 0 to 59.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "nanos": {
                                                                                "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "seconds": {
                                                                                "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "timestampValue": {
                                                                        "format": "google-datetime",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "redactConfig": {
                                                        "description": "Redact a given value. For example, if used with an `InfoTypeTransformation`\ntransforming PHONE_NUMBER, and input 'My phone number is 206-555-0123', the\noutput would be 'My phone number is '.",
                                                        "properties": {},
                                                        "type": "object"
                                                    },
                                                    "replaceConfig": {
                                                        "description": "Replace each input value with a given `Value`.",
                                                        "properties": {
                                                            "newValue": {
                                                                "description": "Value to replace it with.",
                                                                "properties": {
                                                                    "booleanValue": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "dateValue": {
                                                                        "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
                                                                        "properties": {
                                                                            "day": {
                                                                                "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "month": {
                                                                                "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "year": {
                                                                                "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "dayOfWeekValue": {
                                                                        "enum": [
                                                                            "DAY_OF_WEEK_UNSPECIFIED",
                                                                            "MONDAY",
                                                                            "TUESDAY",
                                                                            "WEDNESDAY",
                                                                            "THURSDAY",
                                                                            "FRIDAY",
                                                                            "SATURDAY",
                                                                            "SUNDAY"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "floatValue": {
                                                                        "format": "double",
                                                                        "type": "number"
                                                                    },
                                                                    "integerValue": {
                                                                        "format": "int64",
                                                                        "type": "string"
                                                                    },
                                                                    "stringValue": {
                                                                        "type": "string"
                                                                    },
                                                                    "timeValue": {
                                                                        "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are google.type.Date and `google.protobuf.Timestamp`.",
                                                                        "properties": {
                                                                            "hours": {
                                                                                "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "minutes": {
                                                                                "description": "Minutes of hour of day. Must be from 0 to 59.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "nanos": {
                                                                                "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "seconds": {
                                                                                "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds.",
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "timestampValue": {
                                                                        "format": "google-datetime",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "replaceWithInfoTypeConfig": {
                                                        "description": "Replace each matching finding with the name of the info_type.",
                                                        "properties": {},
                                                        "type": "object"
                                                    },
                                                    "timePartConfig": {
                                                        "description": "For use with `Date`, `Timestamp`, and `TimeOfDay`, extract or preserve a\nportion of the value.",
                                                        "properties": {
                                                            "partToExtract": {
                                                                "enum": [
                                                                    "TIME_PART_UNSPECIFIED",
                                                                    "YEAR",
                                                                    "MONTH",
                                                                    "DAY_OF_MONTH",
                                                                    "DAY_OF_WEEK",
                                                                    "WEEK_OF_YEAR",
                                                                    "HOUR_OF_DAY"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "recordSuppressions": {
                                    "description": "Configuration defining which records get suppressed entirely. Records that\nmatch any suppression rule are omitted from the output [optional].",
                                    "items": {
                                        "description": "Configuration to suppress records whose suppression conditions evaluate to\ntrue.",
                                        "properties": {
                                            "condition": {
                                                "description": "A condition that when it evaluates to true will result in the record being\nevaluated to be suppressed from the transformed content.",
                                                "properties": {
                                                    "expressions": {
                                                        "description": "An expression.",
                                                        "properties": {
                                                            "conditions": {
                                                                "description": "A collection of conditions.",
                                                                "properties": {
                                                                    "conditions": {
                                                                        "items": {
                                                                            "description": "The field type of `value` and `field` do not need to match to be\nconsidered equal, but not all comparisons are possible.\nEQUAL_TO and NOT_EQUAL_TO attempt to compare even with incompatible types,\nbut all other comparisons are invalid with incompatible types.\nA `value` of type:\n\n- `string` can be compared against all other types\n- `boolean` can only be compared against other booleans\n- `integer` can be compared against doubles or a string if the string value\ncan be parsed as an integer.\n- `double` can be compared against integers or a string if the string can\nbe parsed as a double.\n- `Timestamp` can be compared against strings in RFC 3339 date string\nformat.\n- `TimeOfDay` can be compared against timestamps and strings in the format\nof 'HH:mm:ss'.\n\nIf we fail to compare do to type mismatch, a warning will be given and\nthe condition will evaluate to false.",
                                                                            "properties": {
                                                                                "field": {
                                                                                    "description": "Field within the record this condition is evaluated against. [required]",
                                                                                    "properties": {
                                                                                        "name": {
                                                                                            "description": "Name describing the field.",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "operator": {
                                                                                    "description": "Operator used to compare the field or infoType to the value. [required]",
                                                                                    "enum": [
                                                                                        "RELATIONAL_OPERATOR_UNSPECIFIED",
                                                                                        "EQUAL_TO",
                                                                                        "NOT_EQUAL_TO",
                                                                                        "GREATER_THAN",
                                                                                        "LESS_THAN",
                                                                                        "GREATER_THAN_OR_EQUALS",
                                                                                        "LESS_THAN_OR_EQUALS",
                                                                                        "EXISTS"
                                                                                    ],
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "description": "Value to compare against. [Required, except for `EXISTS` tests.]",
                                                                                    "properties": {
                                                                                        "booleanValue": {
                                                                                            "type": "boolean"
                                                                                        },
                                                                                        "dateValue": {
                                                                                            "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
                                                                                            "properties": {
                                                                                                "day": {
                                                                                                    "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "month": {
                                                                                                    "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "year": {
                                                                                                    "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "dayOfWeekValue": {
                                                                                            "enum": [
                                                                                                "DAY_OF_WEEK_UNSPECIFIED",
                                                                                                "MONDAY",
                                                                                                "TUESDAY",
                                                                                                "WEDNESDAY",
                                                                                                "THURSDAY",
                                                                                                "FRIDAY",
                                                                                                "SATURDAY",
                                                                                                "SUNDAY"
                                                                                            ],
                                                                                            "type": "string"
                                                                                        },
                                                                                        "floatValue": {
                                                                                            "format": "double",
                                                                                            "type": "number"
                                                                                        },
                                                                                        "integerValue": {
                                                                                            "format": "int64",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "stringValue": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "timeValue": {
                                                                                            "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are google.type.Date and `google.protobuf.Timestamp`.",
                                                                                            "properties": {
                                                                                                "hours": {
                                                                                                    "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "minutes": {
                                                                                                    "description": "Minutes of hour of day. Must be from 0 to 59.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "nanos": {
                                                                                                    "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "seconds": {
                                                                                                    "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds.",
                                                                                                    "format": "int32",
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "timestampValue": {
                                                                                            "format": "google-datetime",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "logicalOperator": {
                                                                "description": "The operator to apply to the result of conditions. Default and currently\nonly supported value is `AND`.",
                                                                "enum": [
                                                                    "LOGICAL_OPERATOR_UNSPECIFIED",
                                                                    "AND"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "reidentifyTemplateName": {
                    "description": "Optional template to use. References an instance of `DeidentifyTemplate`.\nAny configuration directly specified in `reidentify_config` or\n`inspect_config` will override those set in the template. Singular fields\nthat are set in this request will replace their corresponding fields in the\ntemplate. Repeated fields are appended. Singular sub-messages and groups\nare recursively merged.",
                    "type": "string"
                }
            },
            "type": "object"
        }
    }
}